openapi: 3.0.0
info:
  title: Geneyx Analysis API Collection
  description: >-
    ## **Geneyx Analysis API Collection**


    This collection provides programmatic access to Geneyx Analysis, enabling
    automation and integration with external systems such as LIMS, EHR, and
    internal bioinformatics tools.


    It supports a wide range of functions, including:


    - Sample creation, deletion, and annotation
        
    - Metadata retrieval (samples, enrichment kits, sequencing machines,
    protocols)
        
    - Case creation and management
        
    - File handling and analysis triggering
        

    ### 🔐 **Authentication**


    To use this collection:


    - Set the following variables in the **collection-level "Variables" tab**:
        
        - `ApiUserId`
            
        - `ApiUserKey`
            
        - `CustomerAccountKey` (if required)
            
    - These credentials will automatically populate the headers of all requests.
        

    ### 🌍 **Supported Server URLs**


    Update the `baseURL` variable to match your regional deployment:


    - **Global**: `https://analysis.geneyx.com/`
        
    - **US**: `https://ga-us.geneyx.com/`
        
    - **China**: `https://fa.shanyint.com/`
        

    ### 📦 **Collection Structure**


    The collection is organized into logical folders representing key workflows:


    - `Samples`: Upload, delete, annotate, and retrieve sample metadata
        
    - `Cases`: Create and manage analysis cases
        
    - `Resources`: Fetch supported enrichment kits, protocols, and sequencing
    machines
        
    - `Clinical Records`: Add phenotype data to patient records
        

    ### 🧪 **Best Practices**


    - Use the `Page` and `PageSize` parameters for endpoints returning lists
        
    - Always validate `SampleSn` and `PatientId` formats before submission
        
    - For endpoints that trigger actions (e.g., annotation), `Data: true` in the
    response indicates the action was successfully queued
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
paths:
  /AddClinicalRecord:
    post:
      tags:
        - default
      summary: AddClinicalRecord
      description: >-
        ## Add Clinical Record API


        This endpoint allows you to add a clinical record associated with a
        specific subject already present in the system. It requires a POST
        request to the `/AddClinicalRecord` endpoint.


        ### Request Method


        - **POST**
            

        ### Request URL


        - `{{baseURL}}/AddClinicalRecord`
            

        ### Request Body


        The request body should be in JSON format and include the following
        parameters:


        - **SubjectId** (string): The unique identifier for the subject to whom
        the clinical record pertains.
            
        - **RecordDate** (string): The date and time when the record is created,
        formatted in ISO 8601.
            
        - **Description** (string): A brief description of the clinical record.
            
        - **PhenotypeCodes** (array of strings): An array containing phenotype
        codes relevant to the clinical record.
            

        #### Example Request Body


        ``` json

        {
          "SubjectId": "5.9testPavel",
          "RecordDate": "2025-08-07T18:36:47.961Z",
          "Description": "string",
          "PhenotypeCodes": ["string new"]
        }

         ```

        ### Response Format


        Upon a successful request, the API will return a response with a status
        code of 200 and a JSON object containing the following fields:


        - **Code** (string): A code indicating the status of the request (empty
        string if no error).
            
        - **Data** (object): An object containing the details of the clinical
        record:
            
            - **ID** (string): The unique identifier for the newly created clinical record.
                
            - **Description** (string): The description provided in the request.
                
            - **PatientId** (string): The identifier of the patient associated with the record.
                
            - **RecordDate** (string): The date of the record as submitted.
                
            - **PhenotypeCodes** (array of strings): The phenotype codes submitted with the record.
                
        - **Info** (null or string): Additional information about the request
        (if applicable).
            
        - **MoreInfo** (null or string): Further details if available.
            
        - **NeedEval** (boolean): A flag indicating whether further evaluation
        is needed.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SubjectId: string
                RecordDate: '2025-08-07T18:36:47.961Z'
                Description: string
                PhenotypeCodes:
                  - string new
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "    {\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"ID\": \"fc9c047c-4d3f-4107-875d-e8d370d8ae54\",\r\n        \"Description\": \"Patient presented with mild shortness of breath during exercise. Echocardiogram scheduled.\",\r\n        \"PatientId\": \"c3993197-b193-4276-8e41-8c6725aa5dc1\",\r\n        \"RecordDate\": \"2025-08-06T00:00:00\",\r\n        \"PhenotypeCodes\": [\r\n            {\r\n                \"id\": \"HP:0001635\",\r\n                \"name\": \"Congestive heart failure\"\r\n            },\r\n            {\r\n                \"id\": \"HP:0002099\",\r\n                \"name\": \"Asthma\"\r\n            }\r\n        ]\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /AnnotateSample:
    post:
      tags:
        - default
      summary: AnnotateSample
      description: >-
        ### **Endpoint Description**


        This endpoint triggers annotation for a sample based on the provided
        `SampleSn` (sample serial number). It will annotate the sample using the
        most up-to-date version of the Geneyx platform.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameter:


        - **SampleSn** (string, required): The unique serial number of the
        sample to be annotated.
            

        **Example Request:**


        ```

        {
          "SampleSn": "GT_test_001.vcf.gz"
        }

         ```

        ---


        ### **Expected Response**


        Upon successful execution, the server will return a JSON object with the
        following fields:


        - **Code** (string): A status string, typically `"success"` when
        annotation is initiated successfully.
            
        - **Data** (boolean): `true` if the annotation task was successfully
        queued or initiated.
            
        - **Info** (nullable): May include additional information; `null` in
        standard responses.
            
        - **MoreInfo** (nullable): Additional optional context; typically
        `null`.
            
        - **NeedEval** (boolean): Indicates whether further evaluation is
        needed. Usually `false`.
            

        **Example Response:**


        ```

        {
          "Code": "success",
          "Data": true,
          "Info": null,
          "MoreInfo": null,
          "NeedEval": false
        }

         ```

        ---


        ### **Notes**


        - Ensure the `SampleSn` is valid and corresponds to an uploaded sample.
            
        - A response with `Data: true` confirms that annotation has been
        successfully initiated, not that it has completed.
            
        - The fields `Info` and `MoreInfo` may contain diagnostic messages or
        warnings in error cases.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": true,\r\n    \"NeedEval\": false\r\n}"
  /BatchCases:
    post:
      tags:
        - default
      summary: BatchCases
      description: >-
        ## Endpoint Overview


        The `POST /BatchCases` endpoint is used to create a new batch case in
        the system. This allows users to submit batch-related data for
        processing, typically involving patient information and associated
        metadata.


        ## Request Format


        The request must be sent as a JSON object in the body. The expected
        format for the request body is as follows:


        ``` json

        {
          "BatchName": "string"
        }

         ```

        ### Request Parameters


        - **BatchName** (string): A unique identifier for the batch case being
        created. This should be a descriptive name that helps in identifying the
        batch.
            

        ## Response Structure


        Upon a successful request, the API will return a JSON response with a
        status code of `200`. The response structure is as follows:


        ``` json

        {
          "Code": "string",
          "Data": [
            {
              "PatientId": "string",
              "Patient": "string",
              "SerialNumber": "string",
              "Name": "string",
              "Description": "string or null",
              "VersionSetId": "string",
              "VersionSetName": "string",
              "VersionSetNumber": "integer",
              "VersionSetArchived": "boolean",
              "VersionSetLatest": "boolean",
              "Status": "integer",
              "StatusName": "string",
              "SubStatusId": "string",
              "SubStatusName": "string",
              "MainSampleId": "string",
              "MainSampleSerialNumber": "string",
              "MainSample": "string or null",
              "MainSampleStats": "string or null",
              "PhenAlleleFreq": "number",
              "Phenotypes": "string",
              "IsAdvancedPhenotypes": "boolean",
              "Owner": "string or null",
              "OwnerDepartment": "string or null",
              "GeneticModels": ["integer"],
              "GeneticModelNames": ["string"],
              "AnalysisModeName": "string",
              "ProtocolTat": "integer",
              "AnalysisWaitTime": "integer",
              "TAT": "string or null",
              "DefaultGeneticModel": "string or null",
              "DefaultGeneticModelName": "string or null",
              "ProtocolId": "string",
              "ProtocolName": "string",
              "ProtocolTypeName": "string",
              "ProtocolSerialNumber": "string",
              "SingleGenModelVariantSelection": "boolean",
              "Recommendations": "string",
              "Introduction": "string",
              "Methods": "string",
              "Signature": "string",
              "AutoAnalyze": "boolean",
              "AutoReport": "boolean",
              "VariantNoteTemplate": "string or null",
              "CalcLocalFreq": "boolean",
              "LocalFreqDate": "string",
              "LocalFreqSamples": "integer",
              "LocalFreqSvSamples": "integer",
              "AccountGroupFreqSamples": "integer",
              "AlwaysShowPathogenicVariants": "boolean",
              "AlwaysShowInHousePathogenicVariants": "boolean",
              "GeneList": "string or null",
              "Disease": "string or null",
              "ReadyForAnalysis": "boolean",
              "SamplesReady": "boolean",
              "HasAnalysis": "boolean",
              "HasReport": "boolean",
              "VariantMapId": "string or null",
              "VariantMapName": "string or null",
              "GenomeBuild": "integer",
              "AcmgCalcDate": "string",
              "IbdParentsCalcStatus": "string",
              "AssociatedSamples": "string or null",
              "Assignment": "string or null",
              "IsTrio": "boolean",
              "Preparing": "boolean",
              "InBgProcess": "boolean",
              "ID": "string",
              "CreatedByUser": "string",
              "CreateDate": "string",
              "ModifiedByUser": "string",
              "ModifyDate": "string"
            }
          ],
          "Info": "string or null",
          "MoreInfo": "string or null",
          "NeedEval": "boolean"
        }

         ```

        ### Response Parameters


        - **Code** (string): A code indicating the result of the operation
        (e.g., success or error).
            
        - **Data** (array): An array of objects containing detailed information
        about the batch case created.
            
        - **Info** (string or null): Additional information regarding the
        request.
            
        - **MoreInfo** (string or null): Further details if available.
            
        - **NeedEval** (boolean): Indicates if further evaluation is needed.
            

        This endpoint is essential for managing batch cases effectively and
        provides structured data for further analysis and reporting.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                BatchName: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"PatientId\": \"a56e3c82-f857-4f44-bb1f-d4b131360737\",\r\n            \"Patient\": \"12345\",\r\n            \"SerialNumber\": \"12345\",\r\n            \"Name\": \"Exome / WGS Analysis\",\r\n            \"VersionSetId\": \"ef1e88f7-d454-42ca-b848-b1158fcd816a\",\r\n            \"VersionSetName\": \"v6.1\",\r\n            \"VersionSetNumber\": 48,\r\n            \"VersionSetArchived\": false,\r\n            \"VersionSetLatest\": false,\r\n            \"Status\": 0,\r\n            \"StatusName\": \"Open\",\r\n            \"MainSampleId\": \"8558915c-3286-4aea-b077-a3e9faef303c\",\r\n            \"MainSampleSerialNumber\": \"12345\",\r\n            \"PhenAlleleFreq\": 0.001,\r\n            \"IsAdvancedPhenotypes\": true,\r\n            \"GeneticModels\": [\r\n                1,\r\n                2,\r\n                4,\r\n                8,\r\n                16,\r\n                128,\r\n                256,\r\n                512,\r\n                1073741824\r\n            ],\r\n            \"GeneticModelNames\": [\r\n                \"Recessive HOM\",\r\n                \"Recessive Compound HET\",\r\n                \"Dominant HET\",\r\n                \"Recessive HET\",\r\n                \"X-Linked\",\r\n                \"Mitochondria\",\r\n                \"Secondary Findings\",\r\n                \"CNV/SVs\",\r\n                \"Fast Track\"\r\n            ],\r\n            \"AnalysisModeName\": \"Individual\",\r\n            \"ProtocolTat\": 10,\r\n            \"AnalysisWaitTime\": 89,\r\n            \"ProtocolId\": \"34a34bdc-a344-41f8-8c27-fe6265f7ee56\",\r\n            \"ProtocolName\": \"Exome / WGS Analysis\",\r\n            \"ProtocolTypeName\": \"RareGenetics\",\r\n            \"ProtocolSerialNumber\": \"RG_SINGLE\",\r\n            \"SingleGenModelVariantSelection\": false,\r\n            \"Recommendations\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n</head>\\n<body>\\n<ul>\\n<li>Recommendations</li>\\n</ul>\\n</body>\\n</html>\",\r\n            \"Introduction\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n</head>\\n<body>\\n\\n</body>\\n</html>\",\r\n            \"Methods\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n</head>\\n<body>\\n<p>Methods</p>\\n</body>\\n</html>\",\r\n            \"Signature\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n</head>\\n<body>\\n<p>Geneyx User</p>\\n</body>\\n</html>\",\r\n            \"AutoAnalyze\": true,\r\n            \"AutoReport\": false,\r\n            \"CalcLocalFreq\": true,\r\n            \"LocalFreqDate\": \"2025-05-29T20:57:41.7\",\r\n            \"LocalFreqSamples\": 187,\r\n            \"LocalFreqSvSamples\": 220,\r\n            \"AlwaysShowPathogenicVariants\": false,\r\n            \"AlwaysShowInHousePathogenicVariants\": true,\r\n            \"ReadyForAnalysis\": false,\r\n            \"SamplesReady\": false,\r\n            \"HasAnalysis\": true,\r\n            \"HasReport\": false,\r\n            \"GenomeBuild\": 1,\r\n            \"AcmgCalcDate\": \"2025-05-29T20:59:12.493\",\r\n            \"IbdParentsCalcStatus\": \"None\",\r\n            \"IsTrio\": false,\r\n            \"Preparing\": false,\r\n            \"InBgProcess\": false,\r\n            \"ID\": \"a1431364-7b5b-4c64-8a16-a3974de91ac8\",\r\n            \"CreatedByUser\": \"Geneyx User\",\r\n            \"CreateDate\": \"2025-05-29T20:19:28.29\",\r\n            \"ModifiedByUser\": \"Geneyx User\",\r\n            \"ModifyDate\": \"2025-05-29T20:19:28.29\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /BatchReportList:
    post:
      tags:
        - default
      summary: BatchReportList
      description: >-
        ### Endpoint Description


        The `POST /BatchReportList` endpoint is designed to retrieve a list of
        batch reports based on the provided batch name. This request is
        essential for clients who need to access specific report data associated
        with a given batch.


        ### Request Parameters


        The request body must be in JSON format and include the following
        parameter:


        - **BatchName** (string): The name of the batch for which reports are
        being requested. This is a required field.
            

        **Example Request Body:**


        ``` json

        {
          "BatchName": "1.Txt-20250724-174435"
        }

         ```

        ### Response Structure


        Upon a successful request, the server responds with a JSON object
        containing the following fields:


        - **Code** (string): An error or status code. An empty string indicates
        a successful operation.
            
        - **Data** (array): An array of report objects, each containing:
            
            - **ID** (string): The unique identifier for the report.
                
            - **ReportFileUrl** (string): The URL to access the report file.
                
            - **ReportFileUrl1** (string or null): An additional URL for the report file, if available.
                
            - **DataFileUrl** (string): The URL to access the data file associated with the report.
                
            - **ModelFileUrl** (string): The URL to the model file, if applicable.
                
            - **Notes** (string or null): Any notes related to the report.
                
            - **CreatedByUser** (string): The user who created the report.
                
            - **CreateDate** (string): The date when the report was created.
                
            - **PatientSn** (string): The serial number of the patient.
                
            - **PatientName** (string): The name of the patient.
                
            - **CaseSn** (string): The serial number of the case.
                
            - **CaseName** (string): The name of the case.
                
            - **CaseStatus** (string): The current status of the case.
                
            - **CaseSubStatus** (string): The sub-status of the case.
                
            - **CaseAssignedToUser** (string or null): The user to whom the case is assigned.
                
            - **CaseModifyDate** (string): The date when the case was last modified.
                
            - **SampleSn** (string): The serial number of the sample.
                
            - **SampleVcfUrl** (string): The URL to access the sample VCF file.
                
        - **Info** (null): Additional information, if any.
            
        - **MoreInfo** (null): Further details, if necessary.
            
        - **NeedEval** (boolean): Indicates whether evaluation is required for
        the report.
            

        **Example Response:**


        ``` json

        {
          "Code": "",
          "Data": [
            {
              "ID": "",
              "ReportFileUrl": "",
              "ReportFileUrl1": null,
              "DataFileUrl": "",
              "ModelFileUrl": "",
              "Notes": null,
              "CreatedByUser": "",
              "CreateDate": "",
              "PatientSn": "",
              "PatientName": "",
              "CaseSn": "",
              "CaseName": "",
              "CaseStatus": "",
              "CaseSubStatus": "",
              "CaseAssignedToUser": null,
              "CaseModifyDate": "",
              "SampleSn": "",
              "SampleVcfUrl": ""
            }
          ],
          "Info": null,
          "MoreInfo": null,
          "NeedEval": true
        }

         ```

        This structure provides a comprehensive overview of the reports
        associated with the specified batch, allowing clients to process and
        utilize the report data effectively.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                BatchName: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"ID\": \"316901ce-aafe-48aa-ba01-3da997bb7ec7\",\r\n            \"ReportFileUrl\": \"S-P250715175714 - 12345 Exome _ WGS Analysis - 250729_1709.pdf\",\r\n            \"DataFileUrl\": \"S-P250715175714 - 12345 Exome _ WGS Analysis - 250729_1709 - data.tsv.zip\",\r\n            \"ModelFileUrl\": \"S-P250715175714 - 12345 Exome _ WGS Analysis - 250729_1709.json.gz\",\r\n            \"CreatedByUser\": \"Geneyx User1\",\r\n            \"CreateDate\": \"2025-07-29T17:09:26.96\",\r\n            \"PatientSn\": \"Geneyx-25-642\",\r\n            \"PatientName\": \"Jane Doe\",\r\n            \"CaseSn\": \"S-P250715175714\",\r\n            \"CaseName\": \"12345 Exome / WGS Analysis\",\r\n            \"CaseStatus\": \"Closed\",\r\n            \"CaseSubStatus\": \"Report Sign Off\",\r\n            \"CaseAssignedToUser\": \"Geneyx User1 (geneyx@geneyx.com)\",\r\n            \"CaseModifyDate\": \"2025-07-29T17:39:41.11\",\r\n            \"SampleSn\": \"Geneyx-25-642.dragen.wes.hg38.20250715-165216\",\r\n            \"SampleVcfUrl\": \"Geneyx-25-642.dragen.wes.hg38.20250715-165216.vcf.gz\"\r\n        },\r\n        {\r\n            \"ID\": \"637577bd-e508-4504-9b20-1c8f247a258a\",\r\n            \"ReportFileUrl\": \"S-P250715184749 - 12345 Exome _ WGS Analysis - 250723_2229.pdf\",\r\n            \"DataFileUrl\": \"S-P250715184749 - 12345 Exome _ WGS Analysis - 250723_2229 - data.tsv.zip\",\r\n            \"ModelFileUrl\": \"S-P250715184749 - 12345 Exome _ WGS Analysis - 250723_2229.json.gz\",\r\n            \"CreatedByUser\": \"Geneyx User1\",\r\n            \"CreateDate\": \"2025-07-23T22:29:03.307\",\r\n            \"PatientSn\": \"Geneyx-25-622\",\r\n            \"PatientName\": \"John Doe\",\r\n            \"CaseSn\": \"S-P250715184749\",\r\n            \"CaseName\": \"12345 Exome / WGS Analysis\",\r\n            \"CaseStatus\": \"Closed\",\r\n            \"CaseSubStatus\": \"Report Sign Off\",\r\n            \"CaseAssignedToUser\": \"Geneyx User1 (geneyx@geneyx.com)\",\r\n            \"CaseModifyDate\": \"2025-07-23T22:30:44.653\",\r\n            \"SampleSn\": \"Geneyx-25-622.dragen.wes.hg38.20250715-165442\",\r\n            \"SampleVcfUrl\": \"Geneyx-25-622.dragen.wes.hg38.20250715-165442.vcf.gz\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /BatchSeqSamples:
    post:
      tags:
        - default
      summary: BatchSeqSamples
      description: >-
        ### Endpoint Description


        The `POST /BatchSeqSamples` endpoint is used to obtain batch sequence
        sample data from the server.


        ### Request Body


        The request must include a JSON object with the following key:


        - **BatchName** (string): The name of the batch being uploaded. This is
        a required field that identifies the batch of sequence samples.
            

        #### Example Request Body


        ``` json

        {
          "BatchName": "testingfile1_upload_first.txt- ..."
        }

         ```

        ### Response Structure


        Upon a successful request, the server will respond with a JSON object
        containing the following structure:


        - **Code** (string): An empty string indicating the success of the
        operation.
            
        - **Data** (array): An array of objects, each representing a sequence
        sample with the following properties:
            
            - **PatientId** (string): Identifier for the patient.
                
            - **Patient** (string): Name of the patient.
                
            - **SerialNumber** (string): Serial number associated with the sample.
                
            - **SequenceMachineId** (nullable): ID of the sequencing machine used.
                
            - **SequenceMachine** (nullable): Name of the sequencing machine.
                
            - **EnrichmentKitId** (string): ID of the enrichment kit used.
                
            - **EnrichmentKit** (string): Name of the enrichment kit.
                
            - **EnrichmentKitDescription** (string): Description of the enrichment kit.
                
            - **TakenDate** (nullable): Date when the sample was taken.
                
            - **SeqDate** (nullable): Date when sequencing was performed.
                
            - **ReceivedDate** (nullable): Date when the sample was received.
                
            - **StatusName** (nullable): Current status of the sample.
                
            - **Type** (nullable): Type of the sample.
                
            - **TypeName** (nullable): Name of the sample type.
                
            - **Target** (integer): Target value associated with the sample.
                
            - **TargetName** (string): Name of the target.
                
            - **Source** (nullable): Source of the sample.
                
            - **SourceName** (nullable): Name of the source.
                
            - **Notes** (nullable): Additional notes related to the sample.
                
            - **Relation** (integer): Relation value.
                
            - **RelationName** (string): Name of the relation.
                
            - **UseConsent** (nullable): Indicates if consent was used.
                
            - **CollectionSampleId** (nullable): ID of the collection sample.
                
            - **FastqFilesCount** (integer): Count of FASTQ files associated with the sample.
                
            - **DataSourceId** (string): ID of the data source.
                
            - **DataSource** (string): Name of the data source.
                
            - **Files** (array): An array of file objects associated with the sample, each containing:
                
                - **ID** (string): Identifier for the file.
                    
                - **SeqSampleId** (string): ID of the sequence sample.
                    
                - **FileTypeName** (string): Name of the file type.
                    
                - **FileType** (integer): Type of the file.
                    
                - **FileSubType** (integer): Subtype of the file.
                    
                - **FileName** (string): Name of the file.
                    
                - **Ordinal** (integer): Ordinal number of the file.
                    
                - **Status** (integer): Status code of the file.
                    
                - **StatusName** (string): Name of the file status.
                    
                - **CreateDate** (string): Date the file was created.
                    
                - **FileSize** (integer): Size of the file in bytes.
                    
                - **DownloadedSize** (integer): Size of the file that has been downloaded.
                    
                - **Retries** (integer): Number of retry attempts for the file upload.
                    
                - **ErrorMessage** (nullable): Error message if any issue occurred during the file upload.
                    
            - **ExcludeFromLAF** (boolean): Indicates if the sample should be excluded from LAF processing.
                
            - **PcrFree** (nullable): Indicates if the sample is PCR-free.
                
            - **ID** (string): Identifier for the batch sequence sample.
                
            - **CreatedByUser** (string): User who created the batch.
                
            - **CreateDate** (string): Date when the batch was created.
                
            - **ModifiedByUser** (string): User who last modified the batch.
                
            - **ModifyDate** (string): Date when the batch was last modified.
                
        - **Info** (nullable): Additional information about the response.
            
        - **MoreInfo** (nullable): Further details if available.
            
        - **NeedEval** (boolean): Indicates if evaluation is needed for the
        samples.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                BatchName: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"PatientId\": \"5dbe7758-f709-49e8-892f-ff3d9bbdf460\",\r\n            \"Patient\": \"20010667\",\r\n            \"SerialNumber\": \"20010667\",\r\n            \"SequenceMachineId\": \"1b335654-094f-473b-9b89-300b28d300eb\",\r\n            \"SequenceMachine\": \"MiSeq\",\r\n            \"EnrichmentKitId\": \"a2c2c3c9-8c42-4a73-92b2-fc633c597259\",\r\n            \"EnrichmentKit\": \"DefaultExons\",\r\n            \"EnrichmentKitDescription\": \"Default - Exons only\",\r\n            \"TakenDate\": \"2020-08-27T00:00:00\",\r\n            \"SeqDate\": \"2020-08-27T00:00:00\",\r\n            \"ReceivedDate\": \"2020-08-27T00:00:00\",\r\n            \"Type\": 1,\r\n            \"TypeName\": \"RnaSeq\",\r\n            \"Target\": 2,\r\n            \"TargetName\": \"Exome\",\r\n            \"Source\": 1,\r\n            \"SourceName\": \"GermLine\",\r\n            \"Notes\": \"DRAGEN Exome\",\r\n            \"Relation\": 3,\r\n            \"RelationName\": \"Sibling\",\r\n            \"UseConsent\": true,\r\n            \"CollectionSampleId\": \"3\",\r\n            \"FastqFilesCount\": 4,\r\n            \"DataSourceId\": \"3c3d3155-d4e0-4505-99f0-187afe719bfd\",\r\n            \"DataSource\": \"S3\",\r\n            \"Files\": [\r\n                {\r\n                    \"ID\": \"7acf0dc5-3395-4fea-b71c-af46b88faa90\",\r\n                    \"SeqSampleId\": \"f61dfb88-87bb-4232-895f-717713ea6e4f\",\r\n                    \"FileTypeName\": \"FastQ\",\r\n                    \"FileType\": 1,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"20010667_S200017213_L01_60_R1.fastq.gz\",\r\n                    \"Ordinal\": 1,\r\n                    \"Status\": 10,\r\n                    \"StatusName\": \"Done\",\r\n                    \"CreateDate\": \"2023-02-16T14:52:08.45\",\r\n                    \"FileSize\": 2019550584,\r\n                    \"DownloadedSize\": 2019550584,\r\n                    \"Retries\": 0\r\n                },\r\n                {\r\n                    \"ID\": \"2bb9da5c-ac39-4254-b4e5-b515e4e46355\",\r\n                    \"SeqSampleId\": \"f61dfb88-87bb-4232-895f-717713ea6e4f\",\r\n                    \"FileTypeName\": \"FastQ\",\r\n                    \"FileType\": 1,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"20010667_S200017213_L01_60_R2.fastq.gz\",\r\n                    \"Ordinal\": 2,\r\n                    \"Status\": 10,\r\n                    \"StatusName\": \"Done\",\r\n                    \"CreateDate\": \"2023-02-16T14:52:08.45\",\r\n                    \"FileSize\": 2142141116,\r\n                    \"DownloadedSize\": 2142141116,\r\n                    \"Retries\": 0\r\n                },\r\n                {\r\n                    \"ID\": \"5beb9cc2-a36c-451c-af6a-34f4cc1853aa\",\r\n                    \"SeqSampleId\": \"f61dfb88-87bb-4232-895f-717713ea6e4f\",\r\n                    \"FileTypeName\": \"FastQ\",\r\n                    \"FileType\": 1,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"20010667_S200017214_L01_60_R1.fastq.gz\",\r\n                    \"Ordinal\": 3,\r\n                    \"Status\": 10,\r\n                    \"StatusName\": \"Done\",\r\n                    \"CreateDate\": \"2023-02-16T14:52:08.45\",\r\n                    \"FileSize\": 2019550584,\r\n                    \"DownloadedSize\": 2019550584,\r\n                    \"Retries\": 0\r\n                },\r\n                {\r\n                    \"ID\": \"11067485-f7a9-4980-9f6b-1986b92f3745\",\r\n                    \"SeqSampleId\": \"f61dfb88-87bb-4232-895f-717713ea6e4f\",\r\n                    \"FileTypeName\": \"FastQ\",\r\n                    \"FileType\": 1,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"20010667_S200017214_L01_60_R2.fastq.gz\",\r\n                    \"Ordinal\": 4,\r\n                    \"Status\": 10,\r\n                    \"StatusName\": \"Done\",\r\n                    \"CreateDate\": \"2023-02-16T14:52:08.45\",\r\n                    \"FileSize\": 2142141116,\r\n                    \"DownloadedSize\": 2142141116,\r\n                    \"Retries\": 0\r\n                }\r\n            ],\r\n            \"ExcludeFromLAF\": false,\r\n            \"ID\": \"f61dfb88-87bb-4232-895f-717713ea6e4f\",\r\n            \"CreatedByUser\": \"Geneyx User\",\r\n            \"CreateDate\": \"2023-02-16T14:50:15.773\",\r\n            \"ModifiedByUser\": \"Geneyx User\",\r\n            \"ModifyDate\": \"2023-02-16T14:50:15.773\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /BatchVcfSamples:
    post:
      tags:
        - default
      summary: BatchVcfSamples
      description: >-
        ### Endpoint Description


        The `POST /BatchVcfSamples` endpoint is designed to obtain the list of
        generated files for each sample submitted in the batch upload of fastq
        files.


        ### Request Body


        The request body must be in JSON format and should contain the following
        key:


        - **BatchName** (string): The name identifier for the batch of samples
        being submitted. This is a required field.
            

        **Example Request Body:**


        ``` json

        {
          "BatchName": "1.Txt-20250724-174435"
        }

         ```

        ### Response Structure


        Upon successful execution of the request, the server will respond with a
        status code of `200` and a JSON object containing the following
        structure:


        - **Code** (string): An empty string indicating no error codes.
            
        - **Data** (array): An array of objects, each representing a sample with
        the following fields:
            
            - **PatientId** (string): Identifier for the patient (if applicable).
                
            - **Patient** (string): Name of the patient (if applicable).
                
            - **SerialNumber** (string): Serial number associated with the sample.
                
            - **SequenceMachineId** (null or string): Identifier for the sequencing machine.
                
            - **EnrichmentKitId** (string): Identifier for the enrichment kit used.
                
            - **TakenDate** (string): Date when the sample was taken.
                
            - **SeqDate** (string): Date of sequencing.
                
            - **ReceivedDate** (string): Date when the sample was received.
                
            - **StatusName** (null or string): Current status of the sample.
                
            - **Type** (integer): Numeric type identifier for the sample.
                
            - **Target** (integer): Target identifier related to the sample.
                
            - **Source** (integer): Source identifier for the sample.
                
            - **BamFileExists** (boolean): Indicates if the BAM file exists.
                
            - **MethylationFileExists** (boolean): Indicates if the methylation file exists.
                
            - **QcMetricsFileExists** (boolean): Indicates if the QC metrics file exists.
                
            - **ExcludeFromLAF** (boolean): Indicates if the sample is excluded from LAF (Local Analysis Framework).
                
            - **RunPgx** (boolean): Indicates if pharmacogenomics analysis should be run.
                
            - **Files** (array): An array of file objects associated with the sample, each containing:
                
                - **ID** (string): Identifier for the file.
                    
                - **FileTypeName** (string): Name of the file type.
                    
                - **FileType** (integer): Numeric type identifier for the file.
                    
                - **FileName** (string): Name of the file.
                    
                - **CreateDate** (string): Date when the file was created.
                    
                - **TotalVariants** (null or integer): Total number of variants in the file.
                    
        - **Info** (null): Additional information if applicable.
            
        - **MoreInfo** (null): Further details if applicable.
            
        - **NeedEval** (boolean): Indicates if evaluation is needed for the
        samples.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                BatchName: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"PatientId\": \"da7650b9-726c-4d06-bf98-26a92cc37069\",\r\n            \"Patient\": \"12345\",\r\n            \"SerialNumber\": \"105965.dragen.wes.hg38.20250126-144228\",\r\n            \"EnrichmentKitId\": \"7c3bda33-486b-41c3-9996-6929761d2b84\",\r\n            \"EnrichmentKit\": \"HG38 - IDT XGen Exome Research Panel V2.0+Pilot+PGx+modifiers\",\r\n            \"EnrichmentKitDescription\": \"38 IDT XGen Exome Research Panel V2.0+Pilot+PGx+modifiers\",\r\n            \"Target\": 2,\r\n            \"TargetName\": \"Exome\",\r\n            \"Source\": 3,\r\n            \"SourceName\": \"Blood\",\r\n            \"BamUrl\": \"https://analysis.geneyx.com/api/gdfile?file=12345.bam\",\r\n            \"BamFileExists\": true,\r\n            \"MethylationFileExists\": false,\r\n            \"CnvNormUrl\": \"https://analysis.geneyx.com/api/gdfile?file=12345.tn.bw\",\r\n            \"CnvNormFileExists\": true,\r\n            \"QcMetricsUrl\": \"https://analysis.geneyx.com/api/gdfile?file=12345.qc-metrics.zip\",\r\n            \"QcMetricsFileExists\": true,\r\n            \"Relation\": 0,\r\n            \"RelationName\": \"Self\",\r\n            \"GenomeBuild\": 1,\r\n            \"GenomeBuildName\": \"hg38\",\r\n            \"SeqSampleId\": \"f5b05345-a9a0-48be-a52e-0cae5bb99354\",\r\n            \"Assignment\": {\r\n                \"AssignDate\": \"0001-01-01T00:00:00\",\r\n                \"GroupCodes\": [],\r\n                \"Groups\": []\r\n            },\r\n            \"Files\": [\r\n                {\r\n                    \"ID\": \"6e119b7c-f40f-4435-989b-d4e9a1a8837c\",\r\n                    \"FileTypeName\": \"BAM\",\r\n                    \"FileType\": 40,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.hg38.20250126-144228.bam\",\r\n                    \"CreateDate\": \"2025-01-27T13:04:30.387\"\r\n                },\r\n                {\r\n                    \"ID\": \"49e90995-e917-4639-9dae-753a29e35c61\",\r\n                    \"FileTypeName\": \"BAI\",\r\n                    \"FileType\": 41,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.hg38.20250126-144228.bam.bai\",\r\n                    \"CreateDate\": \"2025-01-27T13:04:30.387\"\r\n                },\r\n                {\r\n                    \"ID\": \"15be7e07-ed93-4913-86ab-1a94d60a16ae\",\r\n                    \"FileTypeName\": \"GVCF\",\r\n                    \"FileType\": 2,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.hg38.20250126-144228.hard-filtered.gvcf.gz\",\r\n                    \"CreateDate\": \"2025-01-27T13:04:30.387\"\r\n                },\r\n                {\r\n                    \"ID\": \"9fd1b1c8-83a7-4c43-a011-426ed4db4bb5\",\r\n                    \"FileTypeName\": \"QcMetrics\",\r\n                    \"FileType\": 5,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.hg38.20250126-144228.qc-metrics.zip\",\r\n                    \"CreateDate\": \"2025-01-27T13:04:30.827\"\r\n                },\r\n                {\r\n                    \"ID\": \"f00c36cc-6bf6-4ed6-9897-85101536901f\",\r\n                    \"FileTypeName\": \"SV\",\r\n                    \"FileType\": 21,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.hg38.20250126-144228.sv.unified.vcf.gz\",\r\n                    \"CreateDate\": \"2025-01-27T13:04:30.387\",\r\n                    \"TotalVariants\": 721\r\n                },\r\n                {\r\n                    \"ID\": \"c7dfacda-a4fd-49e0-bc45-45655284fb5e\",\r\n                    \"FileTypeName\": \"CnvNorm\",\r\n                    \"FileType\": 4,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.hg38.20250126-144228.tn.bw\",\r\n                    \"CreateDate\": \"2025-01-27T13:04:30.387\"\r\n                },\r\n                {\r\n                    \"ID\": \"19214cb1-acb3-4223-9c9d-133fb382f76a\",\r\n                    \"FileTypeName\": \"SNV\",\r\n                    \"FileType\": 1,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.hg38.20250126-144228.vcf.gz\",\r\n                    \"CreateDate\": \"2025-01-27T13:04:29.717\",\r\n                    \"TotalVariants\": 221024\r\n                }\r\n            ],\r\n            \"ExcludeFromLAF\": false,\r\n            \"LatestVS\": \"\",\r\n            \"RunPgx\": false,\r\n            \"ID\": \"06798d84-f6aa-482e-bf7c-076fc0b1e960\",\r\n            \"CreatedByUser\": \"Geneyx User\",\r\n            \"CreateDate\": \"2025-01-26T14:42:28.067\",\r\n            \"ModifiedByUser\": \"Geneyx User\",\r\n            \"ModifyDate\": \"2025-01-26T14:42:28.067\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /Case:
    post:
      tags:
        - default
      summary: Case
      description: >-
        ## Endpoint Description


        This endpoint allows the user to view a created case by submitting a
        POST request to `{{baseURL}}/Case`. The request requires a JSON payload
        containing the `CaseSn` parameter, which is a unique identifier for the
        caseId.


        ### Request Parameters


        - **CaseSn** (string): A unique identifier for the case.
            

        ### Example Request Body


        ``` json

        {
          "CaseSn": "62436756_S6.dragen.wes.hg38.20 ..."
        }

         ```

        ### Expected Response


        Upon a successful request, the API will return a response with a status
        code of `200` and a content type of `application/json`. The response
        body contains detailed information about the created case, including:


        - **Code**: A string that may hold error codes or status indicators.
            
        - **Data**: An object containing various attributes related to the case,
        such as:
            
            - **PatientId**: Identifier for the patient associated with the case.
                
            - **SerialNumber**: Serial number of the case.
                
            - **Name**: Name of the case.
                
            - **Description**: A description of the case.
                
            - **VersionSetId**: Identifier for the version set.
                
            - **Status**: Status code of the case.
                
            - **IsAdvancedPhenotypes**: Boolean indicating if advanced phenotypes are available.
                
            - **Recommendations**: Any recommendations related to the case.
                
            - **ReadyForAnalysis**: Boolean indicating if the case is ready for analysis.
                
            - **HasAnalysis**: Boolean indicating if an analysis has been performed.
                
            - **IsTrio**: Boolean indicating if the case involves trio analysis.
                

        ### Notes


        - Ensure that the `CaseSn` is unique to avoid conflicts with existing
        cases.
            
        - The response may include additional fields that provide insights into
        the case's status and associated data.
            
        - Users should handle the response appropriately, especially checking
        the `NeedEval` field to determine if further evaluation is required.
            

        This endpoint is crucial for managing cases within the system and allows
        users to initiate case processing effectively.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                CaseSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"PatientId\": \"7b82897f-76a9-4ac0-b355-33ac6a507fc0\",\r\n        \"Patient\": \"ACMG_Example\",\r\n        \"SerialNumber\": \"DEMO-ACMG AUTO - G-D231228232323\",\r\n        \"Name\": \"ACMG_Auto_Report\",\r\n        \"VersionSetId\": \"4ee37d68-697f-4615-83d3-daa6f138eb7f\",\r\n        \"VersionSetName\": \"v6.1\",\r\n        \"VersionSetNumber\": 48,\r\n        \"VersionSetArchived\": false,\r\n        \"VersionSetLatest\": false,\r\n        \"Status\": 0,\r\n        \"StatusName\": \"Open\",\r\n        \"SubStatusId\": \"8c30ced3-8624-47f9-bf97-08296a4fcdaf\",\r\n        \"SubStatusName\": \"High Priority\",\r\n        \"MainSampleId\": \"a34b2904-5eed-4ce8-a58c-0f21ea9d88a1\",\r\n        \"MainSampleSerialNumber\": \"sample_75.mm2.sortdup.bqsr.hc.vcf.gz\",\r\n        \"PhenAlleleFreq\": 0.001,\r\n        \"Phenotypes\": \"\",\r\n        \"IsAdvancedPhenotypes\": false,\r\n        \"GeneticModels\": [\r\n            1,\r\n            4,\r\n            256\r\n        ],\r\n        \"GeneticModelNames\": [\r\n            \"Recessive HOM\",\r\n            \"Dominant HET\",\r\n            \"Secondary Findings\"\r\n        ],\r\n        \"AnalysisModeName\": \"Individual\",\r\n        \"AnalysisWaitTime\": 68,\r\n        \"DefaultGeneticModel\": 256,\r\n        \"DefaultGeneticModelName\": \"Secondary Findings\",\r\n        \"ProtocolId\": \"cb3920eb-100b-45f2-8d6a-b46ddc7b0ef1\",\r\n        \"ProtocolName\": \"ACMG_Auto_Report\",\r\n        \"ProtocolTypeName\": \"HealthScreening\",\r\n        \"ProtocolSerialNumber\": \"ACMG_AUTO\",\r\n        \"SingleGenModelVariantSelection\": false,\r\n        \"Recommendations\": \"Follow-up with the referral clinician is advised.\",\r\n        \"Introduction\": \"Diagnostic test for a personal and family history of disease.\",\r\n        \"Methods\": \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n</head>\\r\\n<body>\\r\\n<p>Genomic DNA obtained from the submitted sample (is enriched for targeted regions using a hybridization-based protocol) and sequenced using XXXXX technology. Reads are aligned to a reference sequence (GRCh37/ GRCh38). Secondary pipeline was performed using <a href=\\\"https://support.illumina.com/content/dam/illumina-support/documents/downloads/software/dragen/200016065_00_DRAGEN-3.10-Customer-Release-Notes.pdf\\\">DRAGEN </a>V3 on Geneyx platform.</p>\\r\\n</body>\\r\\n</html>\",\r\n        \"Signature\": \"<!DOCTYPE html>\\r\\n<html></html>\",\r\n        \"AutoAnalyze\": true,\r\n        \"AutoReport\": true,\r\n        \"CalcLocalFreq\": true,\r\n        \"LocalFreqDate\": \"2025-06-19T21:33:55.757\",\r\n        \"LocalFreqSamples\": 30,\r\n        \"LocalFreqSvSamples\": 15,\r\n        \"AccountGroupFreqSamples\": 871,\r\n        \"AlwaysShowPathogenicVariants\": true,\r\n        \"AlwaysShowInHousePathogenicVariants\": false,\r\n        \"ReadyForAnalysis\": true,\r\n        \"SamplesReady\": true,\r\n        \"HasAnalysis\": true,\r\n        \"HasReport\": false,\r\n        \"GenomeBuild\": 0,\r\n        \"AcmgCalcDate\": \"2025-06-19T21:35:42.633\",\r\n        \"IbdParentsCalcStatus\": \"None\",\r\n        \"Assignment\": {\r\n            \"AssignedBy\": \"Geneyx User\",\r\n            \"AssignDate\": \"2025-07-30T11:57:13.273\"\r\n        },\r\n        \"IsTrio\": false,\r\n        \"Preparing\": false,\r\n        \"InBgProcess\": false,\r\n        \"ID\": \"96e4699f-c838-4dda-9cc1-95ffbc4ea64e\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2025-06-19T21:03:58.013\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2025-07-30T11:57:13.273\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /Cases:
    post:
      tags:
        - default
      summary: Cases
      description: >-
        ## Case Request


        This endpoint allows users to view cases in account by submitting
        specific parameters. The request is made using the HTTP POST method.


        ### Request Parameters


        - **Query** (string, optional): A search query to filter cases. If not
        specified, it defaults to `null`.
            
        - **Page** (integer, optional): The page number for pagination. It
        defaults to `0`.
            
        - **PageSize** (integer, optional): The number of cases to return per
        page. It defaults to `0`, which may indicate no limit.
            

        ### Request Body Example


        ``` json

        {
          "Query": null,
          "Page": 0,
          "PageSize": 0
        }

         ```

        ### Response


        Upon a successful request, the server will respond with a status code of
        `200` and a JSON object containing the following fields:


        - **Code** (string): A code indicating the status of the request,
        typically an empty string for successful operations.
            
        - **Data** (array): An array containing the data returned by the
        request. In this case, it contains an empty string.
            
        - **Info** (string or null): Additional information about the request,
        which may be `null`.
            
        - **MoreInfo** (string or null): Further details, if available;
        otherwise, it is `null`.
            
        - **NeedEval** (boolean): A flag indicating whether further evaluation
        is needed, which is `true` in this response.
            

        ### Notes


        - Ensure that the parameters are correctly formatted to avoid errors.
            
        - The `Page` and `PageSize` parameters are essential for managing large
        datasets effectively.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        \"DEMO-ACMG AUTO - G-D231228232323\",\r\n        \"DEMO-ACMG AUTO - v6.2\",\r\n        \"DEMO-ACMG AUTO v6.2\",\r\n        \"G-D220628224608 - Copy\"\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /CaseAssignment:
    post:
      tags:
        - default
      summary: CaseAssignment
      description: >-
        ### Endpoint Description


        This endpoint allows users to assign a case to an individual in the
        account. UserId can be obtained by contacting support@geneyx.com
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SerialNumber: string
                AssignedToUserId: 00000000-0000-0000-0000-000000000000
                AssignedToFullName: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"UserId\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"FullName\": \"Geneyx User\",\r\n        \"AssignedBy\": \"Geneyx User\",\r\n        \"AssignDate\": \"2025-08-28T14:12:56.1386703Z\",\r\n        \"Name\": \"Geneyx User\",\r\n        \"Email\": \"\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /CaseHistory:
    post:
      tags:
        - default
      summary: CaseHistory
      description: >-
        ## Add Case History


        This endpoint allows you to review case history information associated
        with a specific case number. The request is made using the HTTP POST
        method to the endpoint `{{baseURL}}/CaseHistory`.


        ### Request


        #### Method


        `POST`


        #### Endpoint


        `{{baseURL}}/CaseHistory`


        #### Request Body


        The request body must be in JSON format and should include the following
        parameter:


        - **CaseSn** (string): The unique identifier for the case. This
        parameter is mandatory and should be provided in the request payload.
            

        **Example Request Body:**


        ``` json

        {
          "CaseSn": "62436756_S6.dragen.wes.hg38.20 ..."
        }

         ```

        ### Response


        Upon a successful request, the server will respond with a status code of
        `200` and the response will be in JSON format. The structure of the
        response is as follows:


        - **Code** (string): A code representing the status of the operation.
            
        - **Data** (array): An array containing details about the case history.
        Each item in the array includes:
            
            - **Type** (integer): An identifier for the type of data.
                
            - **TypeName** (string): The name associated with the type.
                
            - **Data** (object): An object containing additional data, which may include:
                
                - **Comment** (string or null): Any comments related to the case.
                    
            - **ID** (string): The unique identifier for the entry.
                
            - **CreatedByUser** (string): The user who created the entry.
                
            - **CreateDate** (string): The date when the entry was created.
                
            - **ModifiedByUser** (string): The user who last modified the entry.
                
            - **ModifyDate** (string): The date when the entry was last modified.
                
        - **Info** (null or object): Additional information related to the
        request.
            
        - **MoreInfo** (null or object): Any extra information that may be
        useful.
            
        - **NeedEval** (boolean): Indicates whether further evaluation is
        required.
            

        ### Summary


        This API is essential for adding case history data and retrieving
        confirmation of the operation's success, along with any relevant details
        about the case history entries.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                CaseSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"Type\": 7,\r\n            \"TypeName\": \"GenePanelRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"Epilepsy\"\r\n            },\r\n            \"ID\": \"3fbeb005-3f34-494e-9384-a9d2caf93d06\",\r\n            \"CreatedByUser\": \"Geney User1\",\r\n            \"CreateDate\": \"2025-08-27T18:32:59.517\",\r\n            \"ModifiedByUser\": \"Geney User1\",\r\n            \"ModifyDate\": \"2025-08-27T18:32:59.517\"\r\n        },\r\n        {\r\n            \"Type\": 6,\r\n            \"TypeName\": \"GenePanelAdd\",\r\n            \"Data\": {\r\n                \"Comment\": \"Epilepsy\"\r\n            },\r\n            \"ID\": \"794ecfea-454d-401f-98ff-4526cee57f00\",\r\n            \"CreatedByUser\": \"Geney User1\",\r\n            \"CreateDate\": \"2025-08-27T18:32:42.38\",\r\n            \"ModifiedByUser\": \"Geney User1\",\r\n            \"ModifyDate\": \"2025-08-27T18:32:42.38\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"Present more than once\"\r\n            },\r\n            \"ID\": \"19932cc1-79fb-470a-8369-80e0d5f2d713\",\r\n            \"CreatedByUser\": \"Geney User1\",\r\n            \"CreateDate\": \"2025-08-27T18:24:09.297\",\r\n            \"ModifiedByUser\": \"Geney User1\",\r\n            \"ModifyDate\": \"2025-08-27T18:24:09.297\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"FastTrack - Clinical\"\r\n            },\r\n            \"ID\": \"a805e6e7-2db8-43cc-9aee-c8dcd9efa979\",\r\n            \"CreatedByUser\": \"Geney User1\",\r\n            \"CreateDate\": \"2025-08-27T18:24:08.843\",\r\n            \"ModifiedByUser\": \"Geney User1\",\r\n            \"ModifyDate\": \"2025-08-27T18:24:08.843\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"FastTrack - Classification\"\r\n            },\r\n            \"ID\": \"0341aa1a-a01a-45b4-85a8-9dde8225b6fd\",\r\n            \"CreatedByUser\": \"Geney User1\",\r\n            \"CreateDate\": \"2025-08-27T18:24:08.827\",\r\n            \"ModifiedByUser\": \"Geney User1\",\r\n            \"ModifyDate\": \"2025-08-27T18:24:08.827\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"FastTrack - Impact\"\r\n            },\r\n            \"ID\": \"50251315-558e-46f3-9637-d1c63c5f13ae\",\r\n            \"CreatedByUser\": \"Geney User1\",\r\n            \"CreateDate\": \"2025-08-27T18:24:08.81\",\r\n            \"ModifiedByUser\": \"Geney User1\",\r\n            \"ModifyDate\": \"2025-08-27T18:24:08.81\"\r\n        },\r\n        {\r\n            \"Type\": 14,\r\n            \"TypeName\": \"FilterAdd\",\r\n            \"Data\": {\r\n                \"Comment\": \"SV - Effect\"\r\n            },\r\n            \"ID\": \"3a546a19-51ba-4f84-82d6-582c7f1eb9dd\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T12:26:10.383\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T12:26:10.383\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"SV - Effect\"\r\n            },\r\n            \"ID\": \"7c1ba4fc-9e4e-4905-a789-387cf589ece3\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T12:25:43.95\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T12:25:43.95\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"Max AF Rec filter\"\r\n            },\r\n            \"ID\": \"2ff1b807-8142-4ed9-ba4b-ce1f835e35bc\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T12:23:43.607\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T12:23:43.607\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"Max AF Dom filter\"\r\n            },\r\n            \"ID\": \"63ad24a7-bbe1-4244-b75e-1c3819633bc4\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T12:23:41.367\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T12:23:41.367\"\r\n        },\r\n        {\r\n            \"Type\": 7,\r\n            \"TypeName\": \"GenePanelRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"Neuromuscular disease panel - comprehensive\"\r\n            },\r\n            \"ID\": \"4381357f-dbef-4c38-b039-9d32ffb9cc85\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T11:57:42.743\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T11:57:42.743\"\r\n        },\r\n        {\r\n            \"Type\": 6,\r\n            \"TypeName\": \"GenePanelAdd\",\r\n            \"Data\": {\r\n                \"Comment\": \"Neuromuscular disease panel - comprehensive\"\r\n            },\r\n            \"ID\": \"7e4473ac-778a-47fb-b264-b98c5e2e3ff5\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T11:57:34.28\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T11:57:34.28\"\r\n        },\r\n        {\r\n            \"Type\": 15,\r\n            \"TypeName\": \"FilterRemove\",\r\n            \"Data\": {\r\n                \"Comment\": \"ClinGenHaplo\"\r\n            },\r\n            \"ID\": \"46098e5a-ab8e-47d1-b14f-8e8e2da8bce4\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T11:57:21.253\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T11:57:21.253\"\r\n        },\r\n        {\r\n            \"Type\": 3,\r\n            \"TypeName\": \"Assignment\",\r\n            \"Data\": {\r\n                \"FullName\": \"Geney User2 (suzie@geneyx.com)\"\r\n            },\r\n            \"ID\": \"57427849-c5aa-437f-846e-0b11cb0d6f3f\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T11:47:15.25\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T11:47:15.25\"\r\n        },\r\n        {\r\n            \"Type\": 19,\r\n            \"TypeName\": \"RecalcLocalFreq\",\r\n            \"Data\": {},\r\n            \"ID\": \"701ba4ae-d981-4bfa-a85b-e8c15b04decc\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T10:47:48.827\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T10:47:48.827\"\r\n        },\r\n        {\r\n            \"Type\": 1,\r\n            \"TypeName\": \"Update\",\r\n            \"Data\": {},\r\n            \"ID\": \"fda0b705-6327-464a-9f1c-dcd99ea7498a\",\r\n            \"CreatedByUser\": \"Geney User2\",\r\n            \"CreateDate\": \"2025-08-13T10:45:27.603\",\r\n            \"ModifiedByUser\": \"Geney User2\",\r\n            \"ModifyDate\": \"2025-08-13T10:45:27.603\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /CaseNotes:
    post:
      tags:
        - default
      summary: CaseNotes
      description: >-
        ## Add Case Notes


        This endpoint allows you to review case notes associated with a specific
        case. By sending a POST request to `{{baseURL}}/CaseNotes`, you can
        submit relevant information for a case.


        ### Request Parameters


        The request body must be in JSON format and include the following
        parameter:


        - **CaseSn** (string): The case serial number that identifies the case
        for which the note is being added.
            

        ### Example Request


        ``` json

        {
          "CaseSn": "string"
        }

         ```

        ### Response


        Upon a successful request, the server will respond with a status code of
        `200` and a JSON object containing the following fields:


        - **Code** (string): A code indicating the status of the operation.
            
        - **Data** (array): An array of objects representing the notes added,
        where each object includes:
            
            - **ID** (string): The identifier for the note.
                
            - **Note** (string): The content of the note.
                
            - **User** (string): The user who added the note.
                
            - **Timestamp** (string): The time when the note was created.
                
            - **CaseId** (string): The identifier for the case associated with the note.
                
        - **Info** (null): Additional information, if any.
            
        - **MoreInfo** (null): Further details, if applicable.
            
        - **NeedEval** (boolean): A flag indicating whether further evaluation
        is needed.
            

        ### Notes


        - Ensure that the `CaseSn` provided in the request body corresponds to
        an existing case in the system.
            
        - The response will include the details of the notes added, which can be
        used for verification or further processing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                CaseSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"ID\": \"29b4bdc1-cbd1-4593-88e3-ad512d12c958\",\r\n            \"Note\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n</head>\\n<body>\\n<p>Variant selected, requires validaiton&nbsp;</p>\\n</body>\\n</html>\",\r\n            \"User\": \"Eli Sward\",\r\n            \"Timestamp\": \"2025-08-27T20:02:30.17\",\r\n            \"CaseId\": \"ded9ec6a-adfc-4da1-8488-9550de38e04e\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /CaseReports:
    post:
      tags:
        - default
      summary: CaseReports
      description: >-
        ## Endpoint: Create Case Report


        This endpoint allows users to view case reports by submitting relevant
        case information.


        ### Request


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/CaseReports`
            
        - **Content-Type**: application/json
            

        #### Request Body


        The request body must be in JSON format and include the following
        parameter:


        - **CaseSn** (string): The unique identifier for the case, which is used
        to associate the report with a specific case.
            

        **Example Request Body**:


        ``` json

        {
          "CaseSn": "ENE250720130654"
        }

         ```

        ### Response


        Upon successful creation of the case report, the API will return a
        response with the following structure:


        - **Status Code**: 200
            
        - **Content-Type**: application/json
            

        #### Response Body


        The response will contain the following fields:


        - **Code** (string): A code indicating the status of the operation
        (empty if successful).
            
        - **Data** (array): An array of objects containing details about the
        created case report, including:
            
            - **ID** (string): The unique identifier for the report.
                
            - **ReportFileUrl** (string): URL to access the report file.
                
            - **ReportFileUrl1** (null): An additional report file URL (if applicable).
                
            - **DataFileUrl** (string): URL to access the data file associated with the case.
                
            - **ModelFileUrl** (string): URL to access the model file associated with the case.
                
            - **Notes** (null): Any notes associated with the case report.
                
            - **CreatedByUser** (string): The user who created the case report.
                
            - **CreateDate** (string): The date when the case report was created.
                
            - **PatientSn** (string): The unique identifier for the patient.
                
            - **PatientName** (null): The name of the patient (if applicable).
                
            - **CaseSn** (string): The case number associated with the report.
                
            - **CaseName** (string): The name of the case.
                
            - **CaseStatus** (string): The current status of the case.
                
            - **CaseSubStatus** (string): The sub-status of the case.
                
            - **CaseAssignedToUser** (null): The user to whom the case is assigned (if applicable).
                
            - **CaseModifyDate** (string): The date when the case was last modified.
                
            - **SampleSn** (string): The unique identifier for the sample.
                
            - **SampleVcfUrl** (null): URL to access the sample VCF file (if applicable).
                
        - **Info** (null): Additional information (if any).
            
        - **MoreInfo** (null): More detailed information (if any).
            
        - **NeedEval** (boolean): Indicates if further evaluation is needed
        (true or false).
            

        This structure provides a comprehensive overview of the created case
        report and its associated details.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                CaseSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"ID\": \"6086a595-1b76-47fb-92d5-768848689193\",\r\n            \"ReportFileUrl\": \"G-D230616090331(1) - Copy (1) - Copy - Copy - Tumor _ Normal Analysis - 250318_1818.pdf\",\r\n            \"DataFileUrl\": \"G-D230616090331(1) - Copy (1) - Copy - Copy - Tumor _ Normal Analysis - 250318_1818 - data.tsv.zip\",\r\n            \"ModelFileUrl\": \"G-D230616090331(1) - Copy (1) - Copy - Copy - Tumor _ Normal Analysis - 250318_1818.json.gz\",\r\n            \"CreatedByUser\": \"Geneyx User1\",\r\n            \"CreateDate\": \"2025-03-18T18:18:48.127\",\r\n            \"PatientSn\": \"Cancer2\",\r\n            \"PatientName\": \"AA\",\r\n            \"CaseSn\": \"case12345\",\r\n            \"CaseName\": \"Tumor / Normal Analysis\",\r\n            \"CaseStatus\": \"Open\",\r\n            \"CaseSubStatus\": \"High Priority\",\r\n            \"CaseModifyDate\": \"2025-07-30T11:58:13.603\",\r\n            \"SampleSn\": \"T2\",\r\n            \"SampleVcfUrl\": \"PAN2.vcf.gz\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /ClosedCasesReportList:
    post:
      tags:
        - default
      summary: ClosedCasesReportList
      description: >-
        ### Endpoint: ClosedCasesReportList


        This endpoint is used to retrieve a list of closed case reports based on
        a specified start time. It allows clients to query for reports that were
        closed after the provided timestamp.


        #### Request


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/ClosedCasesReportList`
            
        - **Request Body**: The request must include a JSON object with the
        following structure:
            

        ``` json

        {
          "StartTime": "string"
        }

         ```

        - **Parameters**:
            
            - **StartTime** (string): The timestamp from which to retrieve closed case reports. It should be in ISO 8601 format (e.g., "2024-07-06T18:36:47.970Z").
                

        #### Response


        - **Status Code**: 200 OK
            
        - **Content-Type**: application/json
            
        - **Response Structure**: The response will return a JSON object with
        the following structure:
            

        ``` json

        {
          "Code": "string",
          "Data": [
            {
              "ID": "string",
              "ReportFileUrl": "string",
              "ReportFileUrl1": "string|null",
              "DataFileUrl": "string",
              "ModelFileUrl": "string",
              "Notes": "string|null",
              "CreatedByUser": "string",
              "CreateDate": "string",
              "PatientSn": "string",
              "PatientName": "string|null",
              "CaseSn": "string",
              "CaseName": "string",
              "CaseStatus": "string",
              "CaseSubStatus": "string",
              "CaseAssignedToUser": "string|null",
              "CaseModifyDate": "string",
              "SampleSn": "string",
              "SampleVcfUrl": "string"
            }
          ],
          "Info": "string|null",
          "MoreInfo": "string|null",
          "NeedEval": "boolean"
        }

         ```

        - **Fields**:
            
            - **Code**: A string indicating the status of the request.
                
            - **Data**: An array of objects representing the closed case reports. Each object contains various fields related to the report.
                
            - **Info**: Additional information about the request (if any).
                
            - **MoreInfo**: Further details that may be relevant (if any).
                
            - **NeedEval**: A boolean indicating whether further evaluation is needed.
                

        This endpoint is essential for users who need to access and analyze
        closed case reports within a specified timeframe.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                StartTime: '2024-07-06T18:36:47.970Z'
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"ID\": \"820f5293-0864-42ff-b9bf-010bababb0db\",\r\n            \"ReportFileUrl\": \"DEMO PGxv1 v6.2 - PGX - 250818_1505.pdf\",\r\n            \"CreatedByUser\": \"Geneyx User1\",\r\n            \"CreateDate\": \"2025-08-18T15:05:14.507\",\r\n            \"PatientSn\": \"ExamplePgx\",\r\n            \"CaseSn\": \"DEMO PGxv1 v6.2\",\r\n            \"CaseName\": \"PGX\",\r\n            \"CaseStatus\": \"Closed\",\r\n            \"CaseAssignedToUser\": \"Geneyx User2 (geneyx@geneyx.com)\",\r\n            \"CaseModifyDate\": \"2025-08-27T20:35:33.46\",\r\n            \"SampleSn\": \"MARIA_10230396_S29_L001.dragen.wes.grch37.20230811-162804\",\r\n            \"SampleVcfUrl\": \"MARIA_10230396_S29_L001.dragen.wes.grch37.20230811-162804.vcf.gz\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /CreateBatch:
    post:
      tags:
        - default
      summary: CreateBatch
      description: >-
        ### CreateBatch Endpoint


        This endpoint is used to create a new batch of fastq files for
        processing in the system. It processes the provided data and returns a
        confirmation of the operation's success. For succesful operation, the
        Data Source must be configured and template should be configured
        correctly.
        [https://analysis.geneyx.com/DataEntryBatch/BatchTemplate](https://analysis.geneyx.com/DataEntryBatch/BatchTemplate)


        #### Request Format


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/CreateBatch`
            
        - **Content-Type**: application/json
            

        **Request Body**: The request body must be in JSON format and should
        include the necessary parameters required to create a batch. Each
        parameter should be clearly defined based on the specific requirements
        of your application.


        #### Response Structure


        Upon a successful request, the server will respond with a JSON object
        containing the following fields:


        - **Code**: A string indicating the status code of the operation.
            
        - **Data**: This field may contain additional data related to the batch
        creation, but in this case, it is `null`.
            
        - **Info**: A string providing any relevant information about the
        operation.
            
        - **MoreInfo**: This field may provide further details, but it is `null`
        in this response.
            
        - **NeedEval**: A boolean indicating whether further evaluation is
        required after the batch creation.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  description: Batch TSV file
                  format: binary
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"FileName\": \"BatchImportTemplateAPI.txt\",\r\n        \"Status\": 1,\r\n        \"StatusName\": \"Processing\",\r\n        \"Name\": \"BatchImportTemplateAPI.txt-20250827-142424\",\r\n        \"ID\": \"4ca032e9-3783-44dc-969a-20ffb20affb7\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2025-08-27T14:24:25.9176975Z\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2025-08-27T14:24:25.9176975Z\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /CreateCase:
    post:
      tags:
        - default
      summary: CreateCase
      description: >-
        ## Create Case API


        This endpoint allows users to create a new case in the system. The
        request must include detailed information about the case, including
        patient details, genetic information, and associated samples. Subject
        must be present prior to upload.


        ### Request Format


        The request should be sent as a JSON object in the body of the POST
        request. Below are the required fields and their descriptions:


        - **SerialNumber** (string): A unique identifier for the case.
            
        - **Name** (string): The name associated with the case.
            
        - **Description** (string): A brief description of the case.
            
        - **PhenAlleleFreq** (number): The frequency of the phenotype allele.
            
        - **Phenotypes** (string): A list of phenotypes associated with the
        case, formatted as a string.
            
        - **Owner** (string): The name of the individual responsible for the
        case.
            
        - **OwnerDepartment** (string): The department of the owner.
            
        - **GeneList** (string): A list of genes relevant to the case.
            
        - **ProtocolId** (string): The identifier for the protocol being used.
            
        - **SubjectId** (string): The identifier for the subject of the case.
            
        - **ProbandSampleId** (string): The identifier for the proband sample.
            
        - **AssociatedSamples** (array|null): An array of associated sample
        identifiers, or null if none.
            
        - **AssignedToUserId** (string|null): The user ID of the person assigned
        to the case, or null if unassigned.
            
        - **AssignedToFullName** (string|null): The full name of the assigned
        user, or null if unassigned.
            
        - **AssignedToUser** (string|null): The username of the assigned user,
        or null if unassigned.
            

        ### Response Structure


        Upon successful creation of a case, the API will respond with a JSON
        object containing the following fields:


        - **Code** (string): A code indicating the status of the request.
            
        - **Data** (object): Contains detailed information about the created
        case, including:
            
            - **PatientId** (string): The identifier for the patient.
                
            - **SerialNumber** (string): The serial number of the case.
                
            - **Name** (string): The name associated with the case.
                
            - **Description** (string): The description of the case.
                
            - **VersionSetId** (string): The ID for the version set.
                
            - **Status** (number): The status code of the case.
                
            - **MainSample** (object): An object containing details about the main sample associated with the case.
                
            - **PhenAlleleFreq** (number): The frequency of the phenotype allele.
                
            - **Owner** (string): The owner of the case.
                
            - **IsAdvancedPhenotypes** (boolean): Indicates if advanced phenotypes are used.
                
            - **SamplesReady** (boolean): Indicates if the samples are ready for analysis.
                
            - **AssociatedSamples** (array): An array of any associated samples.
                

        The response will also include additional metadata related to the case
        and its processing status.


        ### Status Codes


        - **200 OK**: The case was successfully created.
            
        - Other status codes may indicate errors or issues with the request.
            

        Ensure that all required fields are included in the request body to
        avoid errors during case creation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SerialNumber: string
                Name: string
                Description: string
                PhenAlleleFreq: 0
                Phenotypes: string
                Owner: string
                OwnerDepartment: string
                GeneList: string
                ProtocolId: string
                SubjectId: string
                ProbandSampleId: string
                AssociatedSamples:
                  - Relation: 0
                    SampleId: string
                    Affected: 0
                AssignedToUserId: 00000000-0000-0000-0000-000000000000
                AssignedToFullName: string
                AssignedToUser: string
                ApiUserId: enter_apiId
                ApiUserKey: enter_apiKey
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"PatientId\": \"c3993197-b193-4276-8e41-8c6725aa5dc1\",\r\n        \"Patient\": \"12345\",\r\n        \"SerialNumber\": \"1234567\",\r\n        \"Name\": \"John Doe\",\r\n        \"Description\": \"Clinical Description\",\r\n        \"VersionSetId\": \"f01f6e3d-9692-44ff-8a46-b70b64d975cb\",\r\n        \"VersionSetName\": \"v6.2\",\r\n        \"VersionSetNumber\": 49,\r\n        \"VersionSetArchived\": false,\r\n        \"VersionSetLatest\": true,\r\n        \"Status\": 0,\r\n        \"StatusName\": \"Open\",\r\n        \"MainSampleId\": \"176297d6-f137-4b0b-bab8-d1d1e53436b0\",\r\n        \"MainSampleSerialNumber\": \"12345\",\r\n        \"MainSample\": {\r\n            \"PatientId\": \"c3993197-b193-4276-8e41-8c6725aa5dc1\",\r\n            \"Patient\": \"12345\",\r\n            \"SerialNumber\": \"12345\",\r\n            \"EnrichmentKitId\": \"af81fbe6-0cdc-476e-808a-fd647d6a1967\",\r\n            \"EnrichmentKit\": \"WGS  Capture\",\r\n            \"EnrichmentKitDescription\": \"WGS\",\r\n            \"Target\": 2,\r\n            \"TargetName\": \"Exome\",\r\n            \"BamUrl\": \"https://analysis.geneyx.com/api/gdfile?file=176297d6-f137-4b0b-bab8-d1d1e53436b0/12345.dragen.wes.grch37.20240506-171502.bam\",\r\n            \"BamFileExists\": true,\r\n            \"MethylationFileExists\": false,\r\n            \"CnvNormFileExists\": false,\r\n            \"QcMetricsUrl\": \"https://analysis.geneyx.com/api/gdfile?file=176297d6-f137-4b0b-bab8-d1d1e53436b0/12345.dragen.wes.grch37.20240506-171502.qc-metrics.zip\",\r\n            \"QcMetricsFileExists\": true,\r\n            \"Relation\": 0,\r\n            \"RelationName\": \"Self\",\r\n            \"GenomeBuild\": 0,\r\n            \"GenomeBuildName\": \"hg19\",\r\n            \"SeqSampleId\": \"17a66aa1-929e-4bce-8893-17185cbf144b\",\r\n            \"Assignment\": {\r\n                \"AssignDate\": \"0001-01-01T00:00:00\",\r\n                \"GroupCodes\": [],\r\n                \"Groups\": []\r\n            },\r\n            \"Files\": [\r\n                {\r\n                    \"ID\": \"ecd14839-0f53-4aa9-be23-909dcd8fd980\",\r\n                    \"FileTypeName\": \"BAM\",\r\n                    \"FileType\": 40,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.grch37.20240506-171502.bam\",\r\n                    \"CreateDate\": \"2024-05-06T17:34:04.63\"\r\n                },\r\n                {\r\n                    \"ID\": \"16c8a746-842f-4b3e-aeba-7171be69669a\",\r\n                    \"FileTypeName\": \"BAI\",\r\n                    \"FileType\": 41,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.grch37.20240506-171502.bam.bai\",\r\n                    \"CreateDate\": \"2024-05-06T17:34:04.63\"\r\n                },\r\n                {\r\n                    \"ID\": \"2773f45c-953c-4e88-9097-407832344744\",\r\n                    \"FileTypeName\": \"QcMetrics\",\r\n                    \"FileType\": 5,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.grch37.20240506-171502.qc-metrics.zip\",\r\n                    \"CreateDate\": \"2024-05-06T17:34:04.897\"\r\n                },\r\n                {\r\n                    \"ID\": \"ae6c8324-e641-41d1-9aef-fad0a4834b4e\",\r\n                    \"FileTypeName\": \"SV\",\r\n                    \"FileType\": 21,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.grch37.20240506-171502.sv.unified.vcf.gz\",\r\n                    \"CreateDate\": \"2024-05-06T17:34:04.63\",\r\n                    \"TotalVariants\": 253\r\n                },\r\n                {\r\n                    \"ID\": \"406137b6-16ca-46e1-b4e3-10b816e09c42\",\r\n                    \"FileTypeName\": \"SNV\",\r\n                    \"FileType\": 1,\r\n                    \"FileSubType\": 0,\r\n                    \"FileName\": \"12345.dragen.wes.grch37.20240506-171502.vcf.gz\",\r\n                    \"CreateDate\": \"2024-05-06T17:34:03.953\",\r\n                    \"TotalVariants\": 167587\r\n                }\r\n            ],\r\n            \"ExcludeFromLAF\": false,\r\n            \"LatestVS\": \"\",\r\n            \"RunPgx\": false,\r\n            \"ID\": \"176297d6-f137-4b0b-bab8-d1d1e53436b0\",\r\n            \"CreatedByUser\": \"Geneyx User\",\r\n            \"CreateDate\": \"2024-05-06T17:15:02.637\",\r\n            \"ModifiedByUser\": \"Geneyx User\",\r\n            \"ModifyDate\": \"2025-08-26T19:56:08.073\"\r\n        },\r\n        \"PhenAlleleFreq\": 0,\r\n        \"Phenotypes\": \"\\\"Narrow palate\\\" \\\"Thin upper lip vermilion\\\" \\\"Narrow palate\\\"\",\r\n        \"IsAdvancedPhenotypes\": true,\r\n        \"Owner\": \"Dr. Geneyx\",\r\n        \"OwnerDepartment\": \"Geneyx Department\",\r\n        \"GeneticModels\": [\r\n            1,\r\n            2,\r\n            4,\r\n            8,\r\n            16,\r\n            128,\r\n            256,\r\n            512,\r\n            1073741824\r\n        ],\r\n        \"GeneticModelNames\": [\r\n            \"Recessive HOM\",\r\n            \"Recessive Compound HET\",\r\n            \"Dominant HET\",\r\n            \"Recessive HET\",\r\n            \"X-Linked\",\r\n            \"Mitochondria\",\r\n            \"Secondary Findings\",\r\n            \"CNV/SVs\",\r\n            \"Fast Track\"\r\n        ],\r\n        \"AnalysisModeName\": \"Individual\",\r\n        \"AnalysisWaitTime\": 0,\r\n        \"ProtocolId\": \"cc932b62-f8f0-4f28-8c3f-28e102d389e5\",\r\n        \"ProtocolName\": \"Short-Read Singleton Analysis\",\r\n        \"ProtocolTypeName\": \"RareGenetics\",\r\n        \"ProtocolSerialNumber\": \"RG_SINGLE\",\r\n        \"SingleGenModelVariantSelection\": false,\r\n        \"Recommendations\": \"Follow-up with the referral clinician is advised.\",\r\n        \"Introduction\": \"Diagnostic test for a personal and family history of disease.\",\r\n        \"Methods\": \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n</head>\\r\\n<body>\\r\\n<p>Genomic DNA obtained from the submitted sample (is enriched for targeted regions using a hybridization-based protocol) and sequenced using XXXXX technology. Reads are aligned to a reference sequence (GRCh37/ GRCh38). Secondary pipeline was performed using <a href=\\\"https://support.illumina.com/content/dam/illumina-support/documents/downloads/software/dragen/200016065_00_DRAGEN-3.10-Customer-Release-Notes.pdf\\\">DRAGEN </a>V3 on Geneyx platform.</p>\\r\\n</body>\\r\\n</html>\",\r\n        \"Signature\": \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n</head>\\r\\n<body>\\n<p><em>Dr</em>. Gregory&nbsp;<em>House</em></p>\\n<p></p>\\n</body>\\r\\n</html>\",\r\n        \"AutoAnalyze\": false,\r\n        \"AutoReport\": false,\r\n        \"CalcLocalFreq\": true,\r\n        \"AlwaysShowPathogenicVariants\": false,\r\n        \"AlwaysShowInHousePathogenicVariants\": false,\r\n        \"GeneList\": \"BRCA1\",\r\n        \"ReadyForAnalysis\": false,\r\n        \"SamplesReady\": false,\r\n        \"HasAnalysis\": false,\r\n        \"HasReport\": false,\r\n        \"GenomeBuild\": 0,\r\n        \"IbdParentsCalcStatus\": \"None\",\r\n        \"AssociatedSamples\": [],\r\n        \"Assignment\": {\r\n            \"UserId\": \"7664dd36-f61f-492e-a85b-953a390b03ea\",\r\n            \"FullName\": \"Geneyx User\",\r\n            \"AssignedBy\": \"Geneyx User\",\r\n            \"AssignDate\": \"2025-08-27T14:47:16.4200928Z\",\r\n            \"Name\": \"Geneyx User\",\r\n            \"Email\": \"\"\r\n        },\r\n        \"IsTrio\": false,\r\n        \"Preparing\": false,\r\n        \"InBgProcess\": false,\r\n        \"ID\": \"cf47aa6f-c97b-4ee6-83a7-59884a705a20\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2025-08-27T14:47:16.4200928Z\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2025-08-27T14:47:16.4200928Z\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /CreateGenePanel:
    post:
      tags:
        - default
      summary: CreateGenePanel
      description: >-
        ## Create Gene Panel


        This endpoint allows you to create a new gene panel by providing
        specific details about the panel.


        ### Request


        **Method:** POST  

        **URL:** `{{baseURL}}/CreateGenePanel`


        #### Request Body


        The request body must be in JSON format and include the following
        parameters:


        - **Name** (string): The name of the gene panel.
            
        - **Description** (string): A brief description of the gene panel.
            
        - **Category** (string): The category under which the gene panel falls.
            
        - **Symbols** (string): A string representing the symbols associated
        with the gene panel.
            
        - **GeneticModelNames** (array of strings): An array containing the
        names of genetic models related to the gene panel.
            
        - **Disabled** (boolean): A flag indicating whether the gene panel is
        disabled (true) or active (false).
            

        ### Response


        Upon successful creation of the gene panel, the server will respond with
        a confirmation message and relevant details about the created gene
        panel. The exact structure of the response will depend on the
        implementation but typically includes the ID of the newly created panel
        and a status message.


        ### Notes


        - Ensure that all input parameters are provided in the correct format.
            
        - The `Disabled` parameter is optional but can be used to deactivate the
        gene panel upon creation.
            
        - This endpoint is critical for managing gene panels in the application
        and should be used with appropriate permissions.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: string
                Description: string
                Category: string
                Symbols: string
                GeneticModelNames:
                  - string
                Disabled: true
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"NeedEval\": false\r\n}"
  /CreateSample:
    post:
      tags:
        - default
      summary: CreateSample
      description: >-
        ### Create Sample Endpoint


        This endpoint allows users to create a new sample entry in the system.
        It accepts various parameters related to the sample and the subject
        associated with it, which are essential for tracking and managing
        samples effectively. For automated sample upload, we recommend using
        scripts provided here:
        [https://github.com/geneyx/geneyx.analysis.api/tree/main/scripts.](https://github.com/geneyx/geneyx.analysis.api/tree/main/scripts.)


        #### Request Format


        - **HTTP Method**: POST
            
        - **Endpoint**: `{{baseURL}}/CreateSample`
            
        - **Request Body**: The request body should be in JSON format and must
        include the following fields:
            

        ``` json

        {
          "SampleSerialNumber": "string",              // Unique identifier for the sample
          "SampleTakenDate": "2025-08-06T18:36:47.985Z", // Date when the sample was taken
          "SampleSequenceDate": "2025-08-06T18:36:47.985Z", // Date of sample sequencing
          "SampleReceivedDate": "2025-08-06T18:36:47.985Z", // Date when the sample was received
          "SampleType": "string",                       // Type of the sample
          "SampleTarget": "string",                     // Target of the sample
          "SampleSource": "string",                     // Source from which the sample was obtained
          "SampleSequenceMachineId": "string",         // ID of the machine used for sequencing
          "SampleEnrichmentKitId": "string",           // ID of the enrichment kit used
          "SampleNotes": "string",                      // Additional notes about the sample
          "SampleRelation": "string",                   // Relation of the sample to other data
          "SampleGenomeBuild": "string",                // Genome build reference
          "BamUrl": "string",                           // URL for BAM file
          "MethylationUrl": "string",                   // URL for Methylation file
          "LocalBamUrl": "string",                      // Local URL for BAM file
          "LocalMethylationUrl": "string",              // Local URL for Methylation file
          "ExcludeFromLAF": true,                       // Flag to exclude from LAF
          "SnvFile": "string",                          // File related to SNV data
          "StructFile": "string",                       // File related to structural data
          "SampleQcData": "string",                     // Quality control data for the sample
          "SampleAdvAnalysis": "string",                // Advanced analysis data for the sample
          "SubjectId": "string",                        // Unique identifier for the subject
          "SubjectName": "string",                      // Name of the subject
          "SubjectGender": "string",                    // Gender of the subject
          "SubjectDateOfBirth": "2025-08-06T18:36:47.986Z", // Date of birth of the subject
          "SubjectConsanguinity": "string",             // Consanguinity status of the subject
          "SubjectPopulationType": "string",            // Population type of the subject
          "SubjectPaternalAncestry": "string",         // Paternal ancestry information
          "SubjectMaternalAncestry": "string",         // Maternal ancestry information
          "SubjectFamilyHistory": "string",             // Family history related to the subject
          "SubjectHasBioSample": true,                  // Indicates if the subject has a biological sample
          "SubjectUseConsentPersonal": true,            // Indicates if personal consent is given
          "SubjectUseConsentClinical": true,            // Indicates if clinical consent is given
          "GroupAssignment": [                          // Array of group assignments
            {
              "Code": "string",                         // Group code
              "Name": "string"                          // Group name
            }
          ],
          "AssignedToUserId": "00000000-0000-0000-0000-00000000", // ID of the user assigned to the sample
          "AssignedToFullName": "string",               // Full name of the user assigned to the sample
          "SkipAnnotation": true                        // Flag to skip annotation
        }

         ```

        #### Response Structure


        Upon successful execution, the API will respond with a status code of
        `200` and the following JSON structure:


        ``` json

        {
          "Code": "",          // Status code indicating the result of the request
          "Data": null,       // Data returned from the server (if any)
          "Info": "",         // Additional information about the request
          "MoreInfo": null,   // Further details (if any)
          "NeedEval": true    // Indicates if further evaluation is needed
        }

         ```

        This response structure provides essential information about the result
        of the sample creation request, including any necessary follow-up
        actions.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSerialNumber: string
                SampleTakenDate: '2025-08-06T18:36:47.985Z'
                SampleSequenceDate: '2025-08-06T18:36:47.985Z'
                SampleReceivedDate: '2025-08-06T18:36:47.985Z'
                SampleType: string
                SampleTarget: string
                SampleSource: string
                SampleSequenceMachineId: string
                SampleEnrichmentKitId: string
                SampleNotes: string
                SampleRelation: string
                SampleGenomeBuild: string
                BamUrl: string
                MethylationUrl: string
                LocalBamUrl: string
                LocalMethylationUrl: string
                ExcludeFromLAF: true
                SnvFile: string
                StructFile: string
                SampleQcData: string
                SampleAdvAnalysis: string
                SubjectId: string
                SubjectName: string
                SubjectGender: string
                SubjectDateOfBirth: '2025-08-06T18:36:47.986Z'
                SubjectConsanguinity: string
                SubjectPopulationType: string
                SubjectPaternalAncestry: string
                SubjectMaternalAncestry: string
                SubjectFamilyHistory: string
                SubjectHasBioSample: true
                SubjectUseConsentPersonal: true
                SubjectUseConsentClinical: true
                GroupAssignment:
                  - Code: string
                    Name: string
                AssignedToUserId: 00000000-0000-0000-0000-000000000000
                AssignedToFullName: string
                SkipAnnotation: true
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /Patient:
    post:
      tags:
        - default
      summary: Patient
      description: >-
        ### **Endpoint Description**


        This endpoint retrieves detailed metadata for an existing patient using
        the patient’s `SerialNumber`. It returns demographic information,
        ancestry, consent status, and relational links to family members.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameter:


        - **SerialNumber** (string, required): The unique identifier of the
        patient to retrieve.
            

        **Example Request:**


        ```

        {
          "SerialNumber": "5.9testPavel"
        }

         ```

        ---


        ### **Expected Response**


        Upon a successful request, the server returns a JSON object with the
        following fields:


        - **Code** (string): `"success"` if the request was successful.
            
        - **Data** (object): Contains patient metadata, including:
            
            - **SerialNumber**: Patient’s ID
                
            - **Gender**, **DateOfBirth**, **YearOfBirth**: Demographic info (nullable if not provided)
                
            - **Consang**, **ConsangName**: Consanguinity status
                
            - **PaternalAncestry**, **MaternalAncestry**, **FamilyHistory**: Ancestral background (nullable)
                
            - **UseConsentPersonal**, **UseConsentClinical**: Consent types (nullable)
                
            - **GenerallyHealthy**: Health flag (nullable)
                
            - **Family Members**: Optional links to grandparents
                
            - **CreatedByUser**, **ModifiedByUser**
                
            - **CreateDate**, **ModifyDate**
                
            - **ID**: Internal Geneyx patient identifier
                

        **Example Response (truncated):**


        ```

        {
          "Code": "success",
          "Data": {
            "SerialNumber": "5.9testPavel",
            "Consang": 0,
            "ConsangName": "Unknown",
            "CreatedByUser": "Pavel Shataylo",
            "CreateDate": "2022-08-07T10:23:48.597",
            "ModifyDate": "2025-08-07T06:28:26.7113585Z"
          },
          "Info": null,
          "MoreInfo": null,
          "NeedEval": false
        }

         ```

        ---


        ### **Notes**


        - Fields such as `Name`, `Gender`, `DateOfBirth`, and ancestry data may
        be `null` if not collected during sample registration.
            
        - The `SerialNumber` must match exactly — it is case-sensitive and
        unique per patient.
            
        - This endpoint is useful for **auditing**, **data review**, or
        **linking metadata** to samples and cases programmatically.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SerialNumber: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: null
  /DataEntryBatches:
    post:
      tags:
        - default
      summary: DataEntryBatches
      description: >-
        ## Endpoint Description


        This endpoint is used to submit data entry batches for processing. It
        allows clients to send a request to create or update data batches in the
        system.


        ### Request


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/DataEntryBatches`
            
        - **Content-Type**: application/json
            

        #### Request Body


        The request body must be in JSON format and contains the following
        parameters:


        - **Query** (nullable, string): This parameter can be used to specify a
        search query. If not needed, it can be set to `null`.
            
        - **Page** (integer): Indicates the page number for pagination. Default
        is `0`.
            
        - **PageSize** (integer): Specifies the number of records to return per
        page. Default is `0`, which may indicate no limit.
            

        **Example Request Body:**


        ``` json

        {
          "Query": null,
          "Page": 0,
          "PageSize": 0
        }

         ```

        ### Response


        Upon a successful request, the server responds with a 200 status code
        and a JSON object containing the following structure:


        - **Code** (string): A code representing the status of the request,
        typically empty if successful.
            
        - **Data** (array): An array containing objects with the following
        fields:
            
            - **FileName** (string): The name of the file associated with the data entry.
                
            - **ErrorResult** (nullable): Any error results encountered during processing, if applicable.
                
            - **Status** (integer): A numeric status code indicating the processing status.
                
            - **StatusName** (string): A human-readable name for the status.
                
            - **Name** (string): The name associated with the data entry.
                
            - **ID** (string): A unique identifier for the data entry.
                
            - **CreatedByUser** (string): The user who created the entry.
                
            - **CreateDate** (string): The date when the entry was created.
                
            - **ModifiedByUser** (string): The user who last modified the entry.
                
            - **ModifyDate** (string): The date when the entry was last modified.
                
        - **Info** (nullable): Additional information about the request, if
        available.
            
        - **MoreInfo** (nullable): Further details that may be relevant.
            
        - **NeedEval** (boolean): Indicates if further evaluation is required
        for the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"FileName\": \"12345.txt\",\r\n            \"Status\": 2,\r\n            \"StatusName\": \"Done\",\r\n            \"Name\": \"12345.txt-20241029-132305\",\r\n            \"ID\": \"f921d024-afb0-44b4-a2af-53d1c24ca555\",\r\n            \"CreatedByUser\": \"Geneyx User\",\r\n            \"CreateDate\": \"2024-10-29T13:23:05.277\",\r\n            \"ModifiedByUser\": \"Geneyx User\",\r\n            \"ModifyDate\": \"2024-10-29T13:23:05.277\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /Sample:
    delete:
      tags:
        - default
      summary: DeleteSample
      description: >-
        **Endpoint Description**


        This endpoint allows users to **delete a sample** from the Geneyx
        platform by specifying its `SampleSn` (sample serial number). Deletion
        is irreversible and will remove the sample and associated data from the
        account.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameter:


        - **SampleSn** (string, required): The serial number of the sample to be
        deleted.
            

        **Example Request:**


        ```

        {
          "SampleSn": "62436756_S6.dragen.wes.hg38.20241217-103119 - All Genes + PGx 2"
        }

         ```

        ---


        ### **Expected Response**


        Upon a successful request, the server will return a JSON object with the
        following fields:


        - **Code** (string): A status message, typically `"success"` if the
        deletion completed without errors.
            
        - **Data** (boolean): `true` if the sample was successfully deleted;
        `false` otherwise.
            
        - **Info** (nullable): Additional context if relevant; often `null`.
            
        - **MoreInfo** (nullable): Supplementary information; typically `null`.
            
        - **NeedEval** (boolean): Indicates whether further evaluation is
        required; usually `false`.
            

        **Example Response:**


        ```

        {
          "Code": "success",
          "Data": true,
          "Info": null,
          "MoreInfo": null,
          "NeedEval": false
        }

         ```

        ---


        ### **Notes**


        - Deleting a sample will also remove associated files (VCF, BAM, QC
        metrics, etc.).
            
        - Ensure that the `SampleSn` is correct and that deletion is intended —
        **this action cannot be undone**.
            
        - If the sample is part of a case, the case may also need to be updated
        or deleted separately.
            
        - You must have the appropriate permissions to perform a delete
        operation.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - default
      summary: Sample
      description: >-
        **Endpoint Description**


        This endpoint retrieves detailed metadata for a specific sample,
        identified by its `SampleSn` (sample serial number). The response
        includes clinical context, file availability, sequencing platform
        metadata, QC links, assignment status, and associated uploaded files.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameter:


        - **SampleSn** (string, required): The serial number of the sample for
        which metadata is being requested.
            

        **Example Request:**


        ```

        {
          "SampleSn": "62436756_S6.dragen.wes.hg38.20241217-103119 - All Genes + PGx 2"
        }

         ```

        ---


        ### **Expected Response**


        Upon a successful request, the server will respond with a status code of
        `200` and a JSON object containing the following fields:


        - **Code** (string): `"success"` if the request succeeded.
            
        - **Data** (object): Contains detailed sample metadata including:
            
            - **PatientId** / **Patient**: Patient identifiers
                
            - **SerialNumber**: The sample’s unique name
                
            - **EnrichmentKitId**, **EnrichmentKit**, **EnrichmentKitDescription**: Details about the kit used
                
            - **Target**, **TargetName**: Sequencing target (e.g., Exome)
                
            - **GenomeBuild** / **GenomeBuildName**: Reference genome used (e.g., hg38)
                
            - **File URLs and statuses** (e.g., `BamUrl`, `QcMetricsUrl`, `BamFileExists`, etc.)
                
            - **Files**: An array of associated uploaded files, each with:
                
                - `FileTypeName`, `FileName`, `CreateDate`, and `TotalVariants` (if applicable)
                    
            - **Assignment**: Metadata about who is assigned to the sample
                
            - **CreateDate**, **CreatedByUser**, **ModifyDate**, **ModifiedByUser**
                
        - **Info** / **MoreInfo** (nullable): May contain additional or
        diagnostic information
            
        - **NeedEval** (boolean): Indicates if further evaluation is needed
        (typically `false`)
            

        **Example Response (partial):**


        ```

        {
          "Code": "success",
          "Data": {
            "PatientId": "6f44db3c-66e2-4b91-8cdc-6856228bdf47",
            "SerialNumber": "62436756_S6.dragen.wes.hg38.20241217-103119 - All Genes + PGx 2",
            "EnrichmentKit": "All Genes + PGx 2",
            "TargetName": "Exome",
            "GenomeBuildName": "hg38",
            "BamFileExists": true,
            "QcMetricsFileExists": true,
            "Files": [
              {
                "FileTypeName": "BAM",
                "FileName": "62436756_S6.dragen.wes.hg38.20241217-103119.bam",
                "TotalVariants": null
              },
              {
                "FileTypeName": "SNV",
                "FileName": "62436756_S6.dragen.wes.hg38.20241217-103119.vcf.gz",
                "TotalVariants": 4934353
              }
            ],
            "Assignment": {
              "AssignedBy": "Geneyx Support",
              "AssignDate": "2025-08-07T04:36:14.017"
            }
          },
          "Info": null,
          "MoreInfo": null,
          "NeedEval": false
        }

         ```

        ---


        ### **Notes**


        - Ensure the sample serial number matches exactly with one stored in
        your Geneyx account.
            
        - The `Files` array includes all uploaded and processed files tied to
        the sample, such as VCFs, BAMs, and QC reports.
            
        - Null fields indicate that data is either not yet available or was not
        provided during sample upload.
            
        - File URLs (e.g., `BamUrl`, `QcMetricsUrl`) may be used to
        programmatically download files, if permissions allow.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"PatientId\": \"b229b3fe-b690-4bbf-886f-9bbcdd359468\",\r\n        \"Patient\": \"JohnDoe\",\r\n        \"SerialNumber\": \"12345.vcf.gz\",\r\n        \"EnrichmentKitId\": \"ef64d222-7d72-4501-8272-bbb41f4b8d20\",\r\n        \"EnrichmentKit\": \"Default - Exons only\",\r\n        \"EnrichmentKitDescription\": \"Default - Exons only\",\r\n        \"TakenDate\": \"2025-08-01T09:15:00\",\r\n        \"SeqDate\": \"2025-08-02T14:45:00\",\r\n        \"ReceivedDate\": \"2025-08-03T08:30:00\",\r\n        \"Target\": 1,\r\n        \"TargetName\": \"WholeGenome\",\r\n        \"Source\": 3,\r\n        \"SourceName\": \"Blood\",\r\n        \"BamUrl\": \"https://files.geneyx.com/123456.bam\",\r\n        \"BamFileExists\": false,\r\n        \"MethylationFileExists\": false,\r\n        \"CnvNormFileExists\": false,\r\n        \"QcMetricsFileExists\": false,\r\n        \"LocalBamUrl\": \"/data/samples/123456.bam\",\r\n        \"LocalMethylationUrl\": \"/data/samples/123456.methylation.bam\",\r\n        \"Notes\": \"Proband sample, priority sequencing case\",\r\n        \"QcData\": {\r\n            \"genes\": {\r\n                \"AARS1\": 100.0\r\n            }\r\n        },\r\n        \"Relation\": 0,\r\n        \"RelationName\": \"Self\",\r\n        \"GenomeBuild\": 1,\r\n        \"GenomeBuildName\": \"hg38\",\r\n        \"Assignment\": {\r\n            \"UserId\": \"7664dd36-f61f-492e-a85b-953a390b03ea\",\r\n            \"FullName\": \"Geneyx User (geneyx@geneyx.com)\",\r\n            \"Name\": \"Geneyx User \",\r\n            \"Email\": \"geneyx@geneyx.com\",\r\n            \"AssignedBy\": \"Geneyx User\",\r\n            \"AssignDate\": \"2025-08-28T13:04:04.84\",\r\n            \"GroupCodes\": [],\r\n            \"Groups\": []\r\n        },\r\n        \"Files\": [\r\n            {\r\n                \"ID\": \"2deff6f9-e642-4dfd-8edf-6a873a7e281f\",\r\n                \"FileTypeName\": \"SV\",\r\n                \"FileType\": 21,\r\n                \"FileName\": \"12345.sv.vcf.gz\",\r\n                \"CreateDate\": \"2025-08-27T22:05:50.12\"\r\n            },\r\n            {\r\n                \"ID\": \"b6866467-5ca6-4e59-9383-72089f4995dd\",\r\n                \"FileTypeName\": \"SNV\",\r\n                \"FileType\": 1,\r\n                \"FileName\": \"12345.vcf.gz\",\r\n                \"CreateDate\": \"2025-04-16T22:19:33.537\",\r\n                \"TotalVariants\": 181949\r\n            }\r\n        ],\r\n        \"ExcludeFromLAF\": false,\r\n        \"LatestVS\": \"\",\r\n        \"RunPgx\": false,\r\n        \"ID\": \"aaec3437-b0ef-4fc7-921a-d7ffab13e493\",\r\n        \"CreatedByUser\": \"Geneyx User1\",\r\n        \"CreateDate\": \"2025-04-16T22:19:33.537\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2025-08-28T12:38:37.307\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /patient/{patientSn}:
    delete:
      tags:
        - default
      summary: DeletePatient
      description: >-
        ### Delete Patient Record


        This endpoint allows you to delete a specific patient record from the
        system.


        #### Request Parameters


        - **URL Parameter**:
            
            - `patientSn` (string): The unique identifier for the patient whose record you wish to delete. This parameter is required.
                

        #### Response


        Upon successful deletion, the response will confirm the operation. The
        structure of the response may include:


        - A success message indicating that the patient record has been deleted.
            
        - An error message if the deletion was unsuccessful, which may include
        reasons such as the patient not being found.
            

        Make sure to handle the response appropriately to inform the user of the
        result of their request.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: patientSn
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - default
      summary: Patient
      description: >-
        ### Delete Patient Record


        This endpoint allows you to obtain a specific patient record from the
        system.


        #### Request Parameters


        - **URL Parameter**:
            
            - `patientSn` (string): The unique identifier for the patient whose record you wish to display. This parameter is required.
                

        #### Response


        Upon success, the response will confirm the operation. The structure of
        the response may include:


        - A success message indicating that the patient record has been
        displayed.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: patientSn
          in: path
          schema:
            type: string
          required: true
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"SerialNumber\": \"Long Read Example\",\r\n        \"Consang\": 2,\r\n        \"ConsangName\": \"NonConsang\",\r\n        \"UseConsentClinical\": true,\r\n        \"ID\": \"ec086f6c-d5e0-449b-8ae6-ea4ac58f8e5f\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2023-11-02T03:45:36.41\",\r\n        \"ModifiedByUser\": \"Geneyx User1\",\r\n        \"ModifyDate\": \"2025-04-02T10:57:01.583\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /case/{caseSn}:
    delete:
      tags:
        - default
      summary: DeleteCase
      description: >-
        ## Delete Case Endpoint


        This endpoint allows users to delete a specific case identified by its
        unique serial number (`caseSn`).


        ### Request


        - **Method**: `DELETE`
            
        - **Endpoint**: `{{baseURL}}/case/{caseSn}`
            
        - **Path Parameter**:
            
            - `caseSn` (string): The unique serial number of the case that you want to delete.
                

        ### Response


        Upon a successful deletion, the API will return a response indicating
        the status of the operation. The expected response format is typically a
        confirmation message or status code indicating that the case has been
        successfully deleted.


        ### Notes


        - Ensure that the `caseSn` provided in the request is valid and
        corresponds to an existing case in the system.
            
        - Deleting a case is irreversible; once deleted, the case cannot be
        recovered.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: caseSn
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /seqSample/{seqSampleSn}:
    delete:
      tags:
        - default
      summary: DeleteSeqSample
      description: >-
        ### DELETE Request to Remove a Sequence Sample


        This endpoint allows you to delete a specific sequence sample identified
        by its unique serial number (`seqSampleSn`).


        #### Request Parameters


        - **seqSampleSn** (path parameter): The unique identifier for the
        sequence sample that you wish to delete. This parameter is required.
            

        #### Expected Response


        Upon a successful deletion, the API responds with a JSON object
        containing the following fields:


        - **Code**: A string that may contain error codes or messages (empty in
        this case).
            
        - **Data**: A boolean indicating the success of the operation. A value
        of `true` confirms that the sequence sample was successfully deleted.
            
        - **Info**: Additional information about the request (null in this
        case).
            
        - **MoreInfo**: Further details if available (null in this case).
            
        - **NeedEval**: A boolean indicating whether further evaluation is
        needed after the deletion (true in this case).
            

        #### Notes


        - A successful response status of `200` indicates that the deletion was
        processed correctly.
            
        - Ensure that the `seqSampleSn` provided is valid and corresponds to an
        existing sequence sample to avoid errors.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: seqSampleSn
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /EnrichmentKits:
    post:
      tags:
        - default
      summary: EnrichmentKits
      description: >-
        ### **Endpoint Description**


        This endpoint retrieves a list of available enrichment kits configured
        for the user's account. These kits are used to define targeted genomic
        regions during sequencing and analysis. The returned names can be used
        when uploading or annotating samples.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameters:


        - **Query** (string or null, optional): A string to filter enrichment
        kit names. If `null`, all available kits are returned.
            
        - **Page** (integer, optional): Page number for pagination. A value of
        `0` returns the first page.
            
        - **PageSize** (integer, optional): Number of items per page. A value of
        `0` disables pagination and returns the full list.
            

        **Example Request:**


        ```

        {
          "Query": null,
          "Page": 0,
          "PageSize": 0
        }

         ```

        ---


        ### **Expected Response**


        Upon a successful request, the server will return a JSON object with the
        following fields:


        - **Code** (string): `"success"` if the request completed successfully.
            
        - **Data** (array of strings): A list of enrichment kit names available
        to the user or organization.
            
        - **Info** (nullable): Additional metadata if applicable; typically
        `null`.
            
        - **MoreInfo** (nullable): Additional context; typically `null`.
            
        - **NeedEval** (boolean): Indicates whether further evaluation is
        needed; usually `false`.
            

        **Example Response:**


        ```

        {
          "Code": "success",
          "Data": [
            "All Genes + PGx 1",
            "All Genes + PGx 2",
            "Clinically Relevant Exons",
            "Cardio Panel v2",
            "Neurology Panel"
          ],
          "Info": null,
          "MoreInfo": null,
          "NeedEval": false
        }

         ```

        ---


        ### **Notes**


        - The kit names returned should be used exactly as provided when
        assigning an enrichment kit to a sample.
            
        - If no kits are returned, ensure that your account is properly
        configured with at least one active enrichment kit.
            
        - Pagination is optional. To retrieve all kits in a single response, set
        `PageSize` to `0`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: null
  /enrichmentKit/{enrichmentKitSn}:
    get:
      tags:
        - default
      summary: EnrichmentKit
      description: >-
        ### GET Sequence Machine


        This endpoint allows you to view information associated with a specified
        enrichment kit.


        #### Request Parameters


        - **URL Parameter**:
            
            - enrichmentKitSn (string): The unique identifier for the enrichment kit.
                

        #### Response


        Upon success, the response will confirm the operation. The structure of
        the response may include:


        - A success message indicating that the sequence machine is present.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: enrichmentKitSn
          in: path
          schema:
            type: string
          required: true
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"SerialNumber\": \"Long Read Sequencing\",\r\n        \"Description\": \"Long Read Sequencing\",\r\n        \"Default\": false,\r\n        \"IncludeRefRefGt\": false,\r\n        \"IncludeAllModifiers\": true,\r\n        \"IncludeClinvarPat\": false,\r\n        \"LmDefault\": true,\r\n        \"MergeBed\": true,\r\n        \"Padding\": 0,\r\n        \"AcHomFilter\": 10,\r\n        \"AcHetFilter\": 2000,\r\n        \"AcHemiFilter\": 10,\r\n        \"DPFilter\": 4.0,\r\n        \"PreFilter\": \"PASS; .\",\r\n        \"GQFilter\": 5,\r\n        \"ID\": \"75a999e6-c1b3-4438-af53-2ec2a257063b\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2024-07-15T14:01:12.64\",\r\n        \"ModifiedByUser\": \"Geneyx User1\",\r\n        \"ModifyDate\": \"2025-03-21T13:23:24.5\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /GenePanels:
    post:
      tags:
        - default
      summary: GenePanels
      description: >-
        ## Gene Panels API Endpoint


        This endpoint allows you to retrieve gene panel information based on the
        provided query parameters.


        ### Request


        - **Method:** POST
            
        - **Endpoint:** `{{baseURL}}/GenePanels`
            
        - **Request Body:**
            
            - `Query` (string, optional): A search query for filtering the gene panels. Currently, it can be set to `null`.
                
            - `Page` (integer): The page number for pagination. This should be set to `0` for the first page.
                
            - `PageSize` (integer): The number of items to return per page. This should be set to `0` to indicate no specific size.
                

        ### Response


        - **Status Code:** 200 OK
            
        - **Content-Type:** application/json
            
        - **Response Body:**
            
            - `Code` (string): A code indicating the status of the request.
                
            - `Data` (array of strings): An array containing the gene panel data. In this case, it may return an empty string if no data is found.
                
            - `Info` (string or null): Additional information about the request, if any.
                
            - `MoreInfo` (string or null): Further details related to the request, if available.
                
            - `NeedEval` (boolean): Indicates whether further evaluation is needed for the request.
                

        This endpoint is useful for querying gene panels with pagination
        support.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        \"ACMG\",\r\n        \"ALS\",\r\n        \"BRCA1/BRCA2 Panel\",\r\n        \"BRCA1test\",\r\n        \"BrSgenes\",\r\n        \"cancer panel\",\r\n        \"Cancer Panel BRCA\",\r\n        \"Carrier Screening - Couple\",\r\n        \"Devysr BRCA\",\r\n        \"Epilepsy\",\r\n        \"FH Extended\",\r\n        \"Hereditary Spastic Paraplegia\",\r\n        \"HI Pathogenic\",\r\n        \"NimbCanPanel578\",\r\n        \"PacBio PureTarget\",\r\n        \"PanelNoGeneticModel\",\r\n        \"R21-Fetal anomalies\",\r\n        \"RASOPATHIES\",\r\n        \"Retinal Disorders\",\r\n        \"SolidTumors17\",\r\n        \"TruSight Cancer\",\r\n        \"TruSight Hereditary Cancer Panel\",\r\n        \"TruSight Inherited Disease\",\r\n        \"Trusight One Expanded-DEMO ONLY\",\r\n        \"Trusight Tumor 15\",\r\n        \"TruSight™ Hereditary Cancer Panel\",\r\n        \"TSO500\"\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /GetCoverageForGenes:
    post:
      tags:
        - default
      summary: GetCoverageForGenes
      description: >-
        ## GetCoverageForGenes


        This endpoint is used to retrieve coverage information for specific
        genes based on a provided sample identifier.


        ### Request


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/GetCoverageForGenes`
            
        - **Request Body** (JSON):
            
            - `sampleSn` (string): The sample identifier for which the coverage information is requested. This should be a unique identifier representing the specific genomic sample.
                
            - `genes` (string): A comma-separated list of gene symbols for which the coverage data is requested. In this case, "BRCA1" is specified.
                

        ### Response


        - **Status Code**: 200 (OK)
            
        - **Content-Type**: application/json
            
        - **Response Body** (JSON):
            
            - `Code` (string): A code indicating the status of the request. An empty string typically indicates success.
                
            - `Data` (null): This field contains the coverage data, which may be null if no data is available.
                
            - `Info` (string): Additional information about the request status. An empty string typically indicates no additional information.
                
            - `MoreInfo` (null): A field that may provide more detailed information if necessary, often null if not applicable.
                
            - `NeedEval` (boolean): A flag indicating whether further evaluation is needed for the request. A value of true suggests that additional processing may be required.
                

        ### Notes


        - Ensure that the `sampleSn` and `genes` parameters are correctly
        formatted to avoid errors in the request.
            
        - The response will primarily indicate whether further evaluation is
        required and may not always return coverage data.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sampleSn: string
                genes: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Length:
              schema:
                type: integer
                example: '1111'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 26 Aug 2025 23:14:22 GMT
            Cache-Control:
              schema:
                type: string
                example: no-cache
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Expires:
              schema:
                type: number
                example: '-1'
            Pragma:
              schema:
                type: string
                example: no-cache
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-CDN:
              schema:
                type: string
                example: Imperva
            X-Iinfo:
              schema:
                type: string
                example: >-
                  45-66275740-66275746 NNNN CT(149 297 0) RT(1756250061597 101)
                  q(0 0 5 -1) r(6 14) U6
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "Code": "success",
                    "Data": "{\"Genes\":{\"BRCA1\":{\"Chromosome\":\"chr17\",\"Exons\":[{\"StartPosition\":41197694,\"EndPosition\":41197819,\"MeanCoverage\":97.53,\"MinCoverage\":67,\"MaxCoverage\":122,\"BasesBelow10\":0,\"ExonLen\":126,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41199659,\"EndPosition\":41199720,\"MeanCoverage\":53.97,\"MinCoverage\":40,\"MaxCoverage\":59,\"BasesBelow10\":0,\"ExonLen\":62,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41201137,\"EndPosition\":41201211,\"MeanCoverage\":38.08,\"MinCoverage\":20,\"MaxCoverage\":49,\"BasesBelow10\":0,\"ExonLen\":75,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41203079,\"EndPosition\":41203134,\"MeanCoverage\":28.34,\"MinCoverage\":23,\"MaxCoverage\":31,\"BasesBelow10\":0,\"ExonLen\":56,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41209068,\"EndPosition\":41209152,\"MeanCoverage\":51.05,\"MinCoverage\":37,\"MaxCoverage\":58,\"BasesBelow10\":0,\"ExonLen\":85,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41215349,\"EndPosition\":41215390,\"MeanCoverage\":23.12,\"MinCoverage\":21,\"MaxCoverage\":24,\"BasesBelow10\":0,\"ExonLen\":42,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41215890,\"EndPosition\":41215968,\"MeanCoverage\":45.62,\"MinCoverage\":30,\"MaxCoverage\":52,\"BasesBelow10\":0,\"ExonLen\":79,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41219624,\"EndPosition\":41219712,\"MeanCoverage\":43.92,\"MinCoverage\":29,\"MaxCoverage\":50,\"BasesBelow10\":0,\"ExonLen\":89,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41222944,\"EndPosition\":41223255,\"MeanCoverage\":64.89,\"MinCoverage\":38,\"MaxCoverage\":94,\"BasesBelow10\":0,\"ExonLen\":312,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41226347,\"EndPosition\":41226538,\"MeanCoverage\":58.0,\"MinCoverage\":42,\"MaxCoverage\":73,\"BasesBelow10\":0,\"ExonLen\":192,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41228504,\"EndPosition\":41228631,\"MeanCoverage\":61.12,\"MinCoverage\":27,\"MaxCoverage\":76,\"BasesBelow10\":0,\"ExonLen\":128,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41231350,\"EndPosition\":41231416,\"MeanCoverage\":0.0,\"MinCoverage\":0,\"MaxCoverage\":0,\"BasesBelow10\":67,\"ExonLen\":67,\"ManeTrid\":\"-\"},{\"StartPosition\":41234420,\"EndPosition\":41234592,\"MeanCoverage\":61.71,\"MinCoverage\":40,\"MaxCoverage\":79,\"BasesBelow10\":0,\"ExonLen\":173,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41242960,\"EndPosition\":41243049,\"MeanCoverage\":91.13,\"MinCoverage\":58,\"MaxCoverage\":116,\"BasesBelow10\":0,\"ExonLen\":90,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41243451,\"EndPosition\":41246877,\"MeanCoverage\":65.54,\"MinCoverage\":32,\"MaxCoverage\":103,\"BasesBelow10\":0,\"ExonLen\":3427,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41247862,\"EndPosition\":41247939,\"MeanCoverage\":29.79,\"MinCoverage\":24,\"MaxCoverage\":32,\"BasesBelow10\":0,\"ExonLen\":78,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41249260,\"EndPosition\":41249306,\"MeanCoverage\":47.17,\"MinCoverage\":40,\"MaxCoverage\":50,\"BasesBelow10\":0,\"ExonLen\":47,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41251791,\"EndPosition\":41251897,\"MeanCoverage\":60.39,\"MinCoverage\":43,\"MaxCoverage\":71,\"BasesBelow10\":0,\"ExonLen\":107,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41256138,\"EndPosition\":41256278,\"MeanCoverage\":41.43,\"MinCoverage\":17,\"MaxCoverage\":57,\"BasesBelow10\":0,\"ExonLen\":141,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41256884,\"EndPosition\":41256973,\"MeanCoverage\":56.97,\"MinCoverage\":45,\"MaxCoverage\":65,\"BasesBelow10\":0,\"ExonLen\":90,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41258472,\"EndPosition\":41258550,\"MeanCoverage\":38.06,\"MinCoverage\":28,\"MaxCoverage\":47,\"BasesBelow10\":0,\"ExonLen\":79,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41267742,\"EndPosition\":41267796,\"MeanCoverage\":38.87,\"MinCoverage\":27,\"MaxCoverage\":44,\"BasesBelow10\":0,\"ExonLen\":55,\"ManeTrid\":\"NM_007294.4\"},{\"StartPosition\":41276033,\"EndPosition\":41276113,\"MeanCoverage\":30.64,\"MinCoverage\":25,\"MaxCoverage\":33,\"BasesBelow10\":0,\"ExonLen\":81,\"ManeTrid\":\"NM_007294.4\"}]}}}",
                    "NeedEval": false
                }
  /GetCoverageForGenePanel:
    post:
      tags:
        - default
      summary: GetCoverageForGenePanel
      description: >-
        ## Get Coverage For Gene Panel


        This endpoint allows users to retrieve coverage information for a
        specified gene panel based on a sample identifier.


        ### Request


        **Method:** POST  

        **URL:** `{{baseURL}}/GetCoverageForGenePanel`


        #### Request Body


        The request body must be sent in JSON format and includes the following
        parameters:


        - **sampleSn** (string): The unique identifier for the sample. This
        should be formatted as a string that represents the specific sample
        being queried.
            
        - **genePanelSn** (string): The identifier for the gene panel. This
        specifies which gene panel's coverage information is being requested.
            

        **Example Request Body:**


        ``` json

        {
          "sampleSn": "62436756_S6.dragen.wes.hg38.20",
          "genePanelSn": "BRCA1"
        }

         ```

        ### Response


        **Status Code:** 200  

        **Content-Type:** application/json


        #### Response Body


        The response will contain the following fields:


        - **Code** (string): A code indicating the status of the request. An
        empty string typically indicates success.
            
        - **Data** (null): This field will return null, indicating that no
        additional data is provided in the response.
            
        - **Info** (string): Additional information regarding the request
        status. An empty string typically indicates no further information is
        available.
            
        - **MoreInfo** (null): This field will return null, indicating that no
        further details are available.
            
        - **NeedEval** (boolean): A flag indicating whether further evaluation
        is needed based on the request.
            

        ### Notes


        - Ensure that the sample and gene panel identifiers are correct to
        receive accurate coverage information.
            
        - The response indicates whether further evaluation is required based on
        the request parameters.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sampleSn: string
                genePanelSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": \"{\\\"Genes\\\":{\\\"BRCA1\\\":{\\\"Chromosome\\\":\\\"chr17\\\",\\\"Exons\\\":[{\\\"StartPosition\\\":41197694,\\\"EndPosition\\\":41197819,\\\"MeanCoverage\\\":97.53,\\\"MinCoverage\\\":67,\\\"MaxCoverage\\\":122,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":126,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41199659,\\\"EndPosition\\\":41199720,\\\"MeanCoverage\\\":53.97,\\\"MinCoverage\\\":40,\\\"MaxCoverage\\\":59,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":62,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41201137,\\\"EndPosition\\\":41201211,\\\"MeanCoverage\\\":38.08,\\\"MinCoverage\\\":20,\\\"MaxCoverage\\\":49,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":75,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41203079,\\\"EndPosition\\\":41203134,\\\"MeanCoverage\\\":28.34,\\\"MinCoverage\\\":23,\\\"MaxCoverage\\\":31,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":56,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41209068,\\\"EndPosition\\\":41209152,\\\"MeanCoverage\\\":51.05,\\\"MinCoverage\\\":37,\\\"MaxCoverage\\\":58,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":85,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41215349,\\\"EndPosition\\\":41215390,\\\"MeanCoverage\\\":23.12,\\\"MinCoverage\\\":21,\\\"MaxCoverage\\\":24,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":42,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41215890,\\\"EndPosition\\\":41215968,\\\"MeanCoverage\\\":45.62,\\\"MinCoverage\\\":30,\\\"MaxCoverage\\\":52,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":79,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41219624,\\\"EndPosition\\\":41219712,\\\"MeanCoverage\\\":43.92,\\\"MinCoverage\\\":29,\\\"MaxCoverage\\\":50,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":89,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41222944,\\\"EndPosition\\\":41223255,\\\"MeanCoverage\\\":64.89,\\\"MinCoverage\\\":38,\\\"MaxCoverage\\\":94,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":312,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41226347,\\\"EndPosition\\\":41226538,\\\"MeanCoverage\\\":58.0,\\\"MinCoverage\\\":42,\\\"MaxCoverage\\\":73,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":192,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41228504,\\\"EndPosition\\\":41228631,\\\"MeanCoverage\\\":61.12,\\\"MinCoverage\\\":27,\\\"MaxCoverage\\\":76,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":128,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41231350,\\\"EndPosition\\\":41231416,\\\"MeanCoverage\\\":0.0,\\\"MinCoverage\\\":0,\\\"MaxCoverage\\\":0,\\\"BasesBelow10\\\":67,\\\"ExonLen\\\":67,\\\"ManeTrid\\\":\\\"-\\\"},{\\\"StartPosition\\\":41234420,\\\"EndPosition\\\":41234592,\\\"MeanCoverage\\\":61.71,\\\"MinCoverage\\\":40,\\\"MaxCoverage\\\":79,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":173,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41242960,\\\"EndPosition\\\":41243049,\\\"MeanCoverage\\\":91.13,\\\"MinCoverage\\\":58,\\\"MaxCoverage\\\":116,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":90,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41243451,\\\"EndPosition\\\":41246877,\\\"MeanCoverage\\\":65.54,\\\"MinCoverage\\\":32,\\\"MaxCoverage\\\":103,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":3427,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41247862,\\\"EndPosition\\\":41247939,\\\"MeanCoverage\\\":29.79,\\\"MinCoverage\\\":24,\\\"MaxCoverage\\\":32,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":78,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41249260,\\\"EndPosition\\\":41249306,\\\"MeanCoverage\\\":47.17,\\\"MinCoverage\\\":40,\\\"MaxCoverage\\\":50,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":47,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41251791,\\\"EndPosition\\\":41251897,\\\"MeanCoverage\\\":60.39,\\\"MinCoverage\\\":43,\\\"MaxCoverage\\\":71,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":107,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41256138,\\\"EndPosition\\\":41256278,\\\"MeanCoverage\\\":41.43,\\\"MinCoverage\\\":17,\\\"MaxCoverage\\\":57,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":141,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41256884,\\\"EndPosition\\\":41256973,\\\"MeanCoverage\\\":56.97,\\\"MinCoverage\\\":45,\\\"MaxCoverage\\\":65,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":90,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41258472,\\\"EndPosition\\\":41258550,\\\"MeanCoverage\\\":38.06,\\\"MinCoverage\\\":28,\\\"MaxCoverage\\\":47,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":79,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41267742,\\\"EndPosition\\\":41267796,\\\"MeanCoverage\\\":38.87,\\\"MinCoverage\\\":27,\\\"MaxCoverage\\\":44,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":55,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"},{\\\"StartPosition\\\":41276033,\\\"EndPosition\\\":41276113,\\\"MeanCoverage\\\":30.64,\\\"MinCoverage\\\":25,\\\"MaxCoverage\\\":33,\\\"BasesBelow10\\\":0,\\\"ExonLen\\\":81,\\\"ManeTrid\\\":\\\"NM_007294.4\\\"}]}}}\",\r\n    \"NeedEval\": false\r\n}"
  /GetExistSamples:
    post:
      tags:
        - default
      summary: GetExistSamples
      description: >-
        ## GetExistSamples Endpoint


        This endpoint allows users to check the existence of samples based on
        their serial numbers. It accepts a list of sample serial numbers and
        returns information regarding their existence.


        ### Request


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/GetExistSamples`
            
        - **Content-Type**: application/json
            

        #### Request Body


        The request body must be in JSON format and should include the following
        parameter:


        - `sampleSerialNumbers` (Array of Strings): A list of sample serial
        numbers to check for existence. Each serial number should be a valid
        string.
            

        **Example Request Body:**


        ``` json

        {
          "sampleSerialNumbers": ["sample1.vcf.gz", "sample2.vcf.gz"]
        }

         ```

        ### Response


        - **Status Code**: 200
            
        - **Content-Type**: application/json
            

        #### Response Body


        The response will be in JSON format and contains the following fields:


        - `Code` (String): A code indicating the status of the request.
            
        - `Data` (Array of Strings): An array containing information about the
        existence of the requested samples.
            
        - `Info` (Nullable): Additional information, if any.
            
        - `MoreInfo` (Nullable): Further details, if available.
            
        - `NeedEval` (Boolean): A flag indicating whether further evaluation is
        needed.
            

        **Example Response:**


        ``` json

        {
          "Code": "",
          "Data": [""],
          "Info": null,
          "MoreInfo": null,
          "NeedEval": true
        }

         ```

        This endpoint is useful for validating the presence of specific samples
        in the system, allowing users to manage their data effectively.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sampleSerialNumbers:
                  - string
                  - string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [],\r\n    \"NeedEval\": false\r\n}"
  /GetSampleMetricsFile:
    post:
      tags:
        - default
      summary: GetSampleMetricsFile
      description: >-
        ### Get Sample Metrics File URL


        This endpoint allows users to retrieve a sample metrics file based on
        the provided sample serial number.


        #### Request


        - **Method**: POST
            
        - **Endpoint**:
        `https://analysis.geneyx.com/api/GetSampleMetricsFileUrl`
            
        - **Request Body**: The request should include a JSON object with the
        following parameter:
            
            - `SampleSn` (string): The serial number of the sample for which the metrics file URL is being requested.
                

        **Example Request Body**:


        ``` json

        {
          "SampleSn": "62436756_S6.dragen.wes.hg38.20 ..."
        }

         ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          headers:
            '':
              schema:
                type: string
                example: ''
            Content-Type:
              schema:
                type: string
                example: application/octet-stream
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="12345.qc-metrics.zip"
            Accept-Ranges:
              schema:
                type: string
                example: bytes
          content:
            text/plain:
              schema:
                type: string
              example: (binary stream – gzipped VCF content)
  /GetSampleMetricsFileUrl:
    post:
      tags:
        - default
      summary: GetSampleMetricsFileUrl
      description: >-
        ### Get Sample Metrics File URL


        This endpoint allows users to retrieve the URL for a sample metrics file
        based on the provided sample serial number.


        #### Request


        - **Method**: POST
            
        - **Endpoint**: `{{baseURL}}/GetSampleMetricsFileUrl`
            
        - **Request Body**: The request should include a JSON object with the
        following parameter:
            
            - `SampleSn` (string): The serial number of the sample for which the metrics file URL is being requested.
                

        **Example Request Body**:


        ``` json

        {
          "SampleSn": "62436756_S6.dragen.wes.hg38.20 ..."
        }

         ```

        #### Response


        - **Status Code**: 200
            
        - **Content-Type**: application/json
            
        - **Response Body**: The response will return a JSON object with the
        following fields:
            
            - `Code` (string): A code indicating the status of the request.
                
            - `Data` (string): The URL for the sample metrics file, if available.
                
            - `Info` (null): Additional information, if any.
                
            - `MoreInfo` (null): Further details, if applicable.
                
            - `NeedEval` (boolean): Indicates whether further evaluation is needed.
                

        #### Notes


        - Ensure that the `SampleSn` parameter is correctly formatted to avoid
        errors in retrieving the metrics file URL.
            
        - The `NeedEval` field in the response indicates whether further
        evaluation or action is required based on the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": \"https://geneyx-prod-primary-pipeline.s3.eu-west-1.amazonaws.com/12345.qc-metrics.zip\",\r\n    \"NeedEval\": false\r\n}"
  /GetVcfSampleArtifact:
    post:
      tags:
        - default
      summary: GetVcfSampleArtifact
      description: >-
        ## GetVcfSampleArtifact


        This endpoint is used to retrieve VCF sample artifacts based on the
        specified pipeline type and sample serial number.


        ### Request Parameters


        The request body must be in JSON format and include the following
        parameters:


        - **PipelineType** (string): Specifies the type of pipeline to be used.
        Acceptable values include "SNV" (Single Nucleotide Variation) or "SV"
        (Structural Variation).
            
        - **SampleSn** (string): Represents the sample serial number that
        uniquely identifies the sample for which the VCF artifact is requested.
            

        ### Example Request Body


        ``` json

        {
          "PipelineType": "SNV or SV",
          "SampleSn": "string"
        }

         ```

        ### Notes


        - Ensure that the `PipelineType` is correctly specified as either "SNV"
        or "SV" to avoid errors.
            
        - The `SampleSn` should be a valid identifier for the sample; otherwise,
        the request may return an error or an empty response.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                PipelineType: SNV or SV
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          headers:
            '':
              schema:
                type: string
                example: ''
            Content-Type:
              schema:
                type: string
                example: application/octet-stream
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="12345.artifact-snv.artifact.gz"
            Accept-Ranges:
              schema:
                type: string
                example: bytes
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: 200-Success (SNV.artifact.gz)
                  value: (binary stream – gzipped VCF content)
                example-1:
                  summary: 200-Success (SV.artifact.gz)
                  value: (binary stream – gzipped VCF content)
  /GetVcfSampleCoverage:
    post:
      tags:
        - default
      summary: GetVcfSampleCoverage
      description: >-
        ## GetVcfSampleCoverage


        This endpoint allows you to retrieve the coverage information for a
        specific sample based on its serial number.


        ### Request Method


        `POST`


        ### Endpoint


        `{{baseURL}}/GetVcfSampleCoverage`


        ### Request Parameters


        The request body must be in JSON format and should include the following
        parameter:


        - **SampleSn** (string): The serial number of the sample for which the
        coverage information is being requested.
            

        ### Expected Response Format


        The response will typically include details regarding the coverage of
        the specified sample. The exact structure of the response will depend on
        the internal implementation but is expected to provide relevant coverage
        metrics based on the provided sample serial number.


        Ensure that the `SampleSn` is correctly formatted to retrieve accurate
        coverage information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"A3GALT2\": {\r\n        \"chr\": \"chr1\",\r\n        \"exons\": [\r\n            {\r\n                \"start\": 33772366,\r\n                \"end\": 33773054,\r\n                \"mean_cv\": 65.73,\r\n                \"min_cv\": 19,\r\n                \"max_cv\": 94,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 689,\r\n                \"mane_transcript\": \"NM_001080438.1\"\r\n            },\r\n            {\r\n                \"start\": 33777652,\r\n                \"end\": 33777790,\r\n                \"mean_cv\": 104.98,\r\n                \"min_cv\": 60,\r\n                \"max_cv\": 128,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 139,\r\n                \"mane_transcript\": \"NM_001080438.1\"\r\n            },\r\n            {\r\n                \"start\": 33778101,\r\n                \"end\": 33778191,\r\n                \"mean_cv\": 62.54,\r\n                \"min_cv\": 46,\r\n                \"max_cv\": 71,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 91,\r\n                \"mane_transcript\": \"NM_001080438.1\"\r\n            },\r\n            {\r\n                \"start\": 33778407,\r\n                \"end\": 33778491,\r\n                \"mean_cv\": 56.8,\r\n                \"min_cv\": 45,\r\n                \"max_cv\": 64,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 85,\r\n                \"mane_transcript\": \"NM_001080438.1\"\r\n            },\r\n            {\r\n                \"start\": 33786676,\r\n                \"end\": 33786699,\r\n                \"mean_cv\": 66.71,\r\n                \"min_cv\": 64,\r\n                \"max_cv\": 68,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 24,\r\n                \"mane_transcript\": \"NM_001080438.1\"\r\n            }\r\n        ]\r\n    },\r\n    \"AADACL3\": {\r\n        \"chr\": \"chr1\",\r\n        \"exons\": [\r\n            {\r\n                \"start\": 12776179,\r\n                \"end\": 12776347,\r\n                \"mean_cv\": 94.59,\r\n                \"min_cv\": 70,\r\n                \"max_cv\": 109,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 169,\r\n                \"mane_transcript\": \"NM_001103170.3\"\r\n            },\r\n            {\r\n                \"start\": 12779476,\r\n                \"end\": 12779693,\r\n                \"mean_cv\": 87.26,\r\n                \"min_cv\": 31,\r\n                \"max_cv\": 109,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 218,\r\n                \"mane_transcript\": \"NM_001103170.3\"\r\n            },\r\n            {\r\n                \"start\": 12780884,\r\n                \"end\": 12780948,\r\n                \"mean_cv\": 26.72,\r\n                \"min_cv\": 17,\r\n                \"max_cv\": 32,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 65,\r\n                \"mane_transcript\": \"NM_001103170.3\"\r\n            },\r\n            {\r\n                \"start\": 12785188,\r\n                \"end\": 12785963,\r\n                \"mean_cv\": 67.58,\r\n                \"min_cv\": 33,\r\n                \"max_cv\": 110,\r\n                \"nb_cu_10\": 0,\r\n                \"ex_len\": 776,\r\n                \"mane_transcript\": \"NM_001103170.3\"\r\n            }\r\n        ]\r\n    }\r\n        ]\r\n    }\r\n}"
  /GetVcfSampleQcData:
    post:
      tags:
        - default
      summary: GetVcfSampleQcData
      description: >-
        ## GetVcfSampleCoverage


        This endpoint allows you to retrieve the sample QC coverage information
        for a specific sample based on its serial number.


        ### Request Method


        `POST`


        ### Endpoint


        `{{baseURL}}/GetVcfSampleCoverage`


        ### Request Parameters


        The request body must be in JSON format and should include the following
        parameter:


        - **SampleSn** (string): The serial number of the sample for which the
        coverage information is being requested.
            

        ### Expected Response Format


        The response will typically include details regarding the coverage of
        the specified sample. The exact structure of the response will depend on
        the internal implementation but is expected to provide relevant coverage
        metrics based on the provided sample serial number.


        Ensure that the `SampleSn` is correctly formatted to retrieve accurate
        coverage information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"ID\": \"f1f9b982-533e-45f1-ae3e-4c64bd3e371e\",\r\n        \"PassedReadsNum\": 53011338,\r\n        \"FailedReadsNum\": 0,\r\n        \"MappedReadsNum\": 52706616,\r\n        \"PairedReadsNum\": 53011338,\r\n        \"MeanCoverage\": 60.75,\r\n        \"Percent5x\": 96.52,\r\n        \"Percent20x\": 94.89,\r\n        \"Percent50x\": 65.02,\r\n        \"BedFilePosNum\": 38098920,\r\n        \"TotalVariants\": 167587,\r\n        \"BiallelicCount\": 165917,\r\n        \"MultiallelicCount\": 1670,\r\n        \"SnpCount\": 142683,\r\n        \"TotalHeteroCount\": 72891,\r\n        \"TotalHomoCount\": 94696,\r\n        \"HetHomRatio\": 0.77,\r\n        \"ChrXSnpsCount\": 3329,\r\n        \"ChrYSnpsCount\": 128,\r\n        \"XYSnpsRatio\": 26.01\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /GetVcfSampleFile:
    post:
      tags:
        - default
      summary: GetVcfSampleFile
      description: >-
        ### GetVcfSampleFile API


        This endpoint allows users to retrieve a VCF sample file based on the
        specified parameters. It is designed to handle requests for different
        types of variant files including SNV, SV, or CNV.


        #### Request Method


        - **POST**
            

        #### Endpoint


        - `{{baseURL}}/GetVcfSampleFile`
            

        #### Request Body


        The request body must be in JSON format and include the following
        parameters:


        - **FileType** (string): Specifies the type of file requested.
        Acceptable values include "SNV", "SV", or "CNV".
            
        - **SampleSn** (string): Represents the sample identifier for which the
        VCF file is being requested.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                FileType: SNV, SV,or CNV
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          headers:
            '':
              schema:
                type: string
                example: ''
            Content-Type:
              schema:
                type: string
                example: application/octet-stream
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="12345.snv.vcf.gz"
            Accept-Ranges:
              schema:
                type: string
                example: bytes
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: 200-Success (SNV.vcf.gz)
                  value: (binary stream – gzipped VCF content)
                example-1:
                  summary: 200-Success (SV.vcf.gz)
                  value: (binary stream – gzipped VCF content)
                example-2:
                  summary: 200-Success (CNV.vcf.gz)
                  value: (binary stream – gzipped VCF content)
  /GetSampleFileUrl:
    post:
      tags:
        - default
      summary: GetSampleFileUrl
      description: >-
        ### GetSampleFileUrl


        This endpoint is used to retrieve a URL for a sample file based on the
        specified parameters. It allows users to request a sample file by
        providing the type of file they are interested in and a sample
        identifier.


        #### Request


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/GetSampleFileUrl`
            
        - **Request Body**: The request body must be in JSON format and should
        include the following parameters:
            
            - `FileType` (string): Indicates the type of file being requested. This parameter can be set to various predefined types, BAM, BAI, or QcMetrics.
                
            - `SampleSn` (string): A sample serial number that uniquely identifies the requested sample. In this instance, it is provided as a placeholder string.
                

        **Example Request Body**:


        ``` json

        {
          "FileType": "Undefined",
          "SampleSn": "string"
        }

         ```

        #### Response


        The response from this endpoint will typically include a URL pointing to
        the requested sample file. The exact structure of the response may vary,
        but it generally contains the following key:


        - `FileUrl` (string): The URL where the sample file can be accessed.
            

        This endpoint is essential for applications that require dynamic access
        to sample files based on user-defined criteria.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                FileType: Undefined
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: 200-Success (BAM.BAI URL)
                  value: "{\r\n  \"Code\": \"success\",\r\n  \"Data\": \"https://files.geneyx.com/sample12345.bam.bai\",\r\n  \"NeedEval\": false\r\n}\r\n"
                example-1:
                  summary: 200-Success (QC.JSON URL)
                  value: "{\r\n  \"Code\": \"success\",\r\n  \"Data\": \"https://files.geneyx.com/12345.qc.json\",\r\n  \"NeedEval\": false\r\n}\r\n"
  /GetSampleTsv:
    post:
      tags:
        - default
      summary: GetSampleTsv
      description: >-
        ## GetSampleTsv


        This endpoint is used to retrieve a sample TSV (Tab-Separated Values)
        file based on the specified parameters. It processes a request
        containing details about the version set, pipeline type, and sample
        identifier, and returns the corresponding TSV file in a compressed
        format.


        ### Request


        - **Method:** POST
            
        - **URL:** `{{baseURL}}/GetSampleTsv`
            
        - **Content-Type:** application/json
            

        #### Request Body


        The request body must be a JSON object with the following parameters:


        - **VersionSetName** (string): The name of the version set to be used,
        e.g., "v6.2".
            
        - **PipelineType** (string): The type of pipeline to be executed, e.g.,
        "SNV".
            
        - **SampleSn** (string): The sample serial number, which uniquely
        identifies the sample, e.g., "62436756_S6.dragen.wes.hg38.20 ...".
            

        **Example Request Body:**


        ``` json

        {
          "VersionSetName": "v6.2",
          "PipelineType": "SNV",
          "SampleSn": "62436756_S6.dragen.wes.hg38.20 ..."
        }

         ```

        ### Response


        - **Status Code:** 200 OK
            
        - **Content-Type:** application/gzip
            

        The response will be a gzipped file containing the TSV data
        corresponding to the requested sample. The actual content of the TSV
        file will not be displayed in the response body but will be served as a
        downloadable file.


        ### Notes


        - Ensure that the parameters provided in the request body are correct
        and properly formatted to avoid errors in processing.
            
        - The response will be in a compressed format, so appropriate handling
        for decompression will be required on the client side.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                VersionSetName: v6.2
                PipelineType: SNV or SV
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          headers:
            Content-Type:
              schema:
                type: string
                example: application/octet-stream
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="12345.tsv-snv.v6.2.tsv.gz"
            Accept-Ranges:
              schema:
                type: string
                example: bytes
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: 200-Success (SNV TSV File)
                  value: (binary stream – gzipped VCF content)
                example-1:
                  summary: 200-Success (SV TSV File)
                  value: (binary stream – gzipped VCF content)
  /GetSampleTsvUrl:
    post:
      tags:
        - default
      summary: GetSampleTsvUrl
      description: >-
        ## GetSampleTsvUrl


        This endpoint allows users to request a sample TSV (Tab-Separated
        Values) URL, that contains annotation data, based on the specified
        parameters. It is primarily used in genomic data processing pipelines.


        ### Request Parameters


        The request is sent as a JSON object in the body with the following
        parameters:


        - **VersionSetName** (string): Specifies the version set for the
        request. In this case, the value is "v6.2".
            
        - **PipelineType** (string): Indicates the type of pipeline being used.
        For this request, the value is "SNV" (Single Nucleotide Variant).
            
        - **SampleSn** (string): Represents the sample identifier. An example
        value is "62436756_S6.dragen.wes.hg38.20 ...".
            

        ### Expected Response


        Upon successful execution, the API returns a JSON response with the
        following structure:


        - **Code** (string): A code indicating the status of the request. An
        empty string implies success without specific error codes.
            
        - **Data** (string): The main data returned by the API. In this case, it
        is an empty string.
            
        - **Info** (null): Additional information, which is null in this
        response.
            
        - **MoreInfo** (null): Further details, which is also null in this
        response.
            
        - **NeedEval** (boolean): A flag indicating whether further evaluation
        is required. In this case, it is set to true.
            

        ### Notes


        - The response status is 200, indicating that the request was processed
        successfully.
            
        - Ensure that the parameters are correctly formatted and valid to avoid
        errors in the response.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                VersionSetName: v6.2
                PipelineType: SNV or SV
                SampleSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: 200-Success (SNV TSV URL)
                  value: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": \"https://analysis-files.geneyx.com:443/cache-vcfdataview/8f2c1cc2-0084-4bac-b8b8-86b18937b1e5/annotation-tsv/Snv/12345.sample-data.cache.tsv.gz\",\r\n    \"NeedEval\": false\r\n}"
                example-1:
                  summary: 200-Success (SV TSV URL)
                  value: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": \"https://analysis-files.geneyx.com:443/cache-vcfdataview/8f2c1cc2-0084-4bac-b8b8-86b18937b1e5/annotation-tsv/Sv/12345.sample-data.cache.tsv.gz\",\r\n    \"NeedEval\": false\r\n}"
  /seqSample/{seqSample}:
    get:
      tags:
        - default
      summary: SeqSample
      description: >-
        #### **Description**


        Retrieves detailed information about a sequencing sample by its unique
        identifier (`id`). The response includes patient linkage, enrichment
        kit, sequencing target, relation, data source, associated FASTQ files,
        and metadata such as creation and modification details.


        #### **Path Parameters**


        - **id** (string, required) – The sequencing sample identifier (e.g.,
        `12345`).
            

        #### **Key Fields**


        - **PatientId / Patient** → Linkage to the patient record.
            
        - **SerialNumber** → Unique identifier for the sequencing sample.
            
        - **EnrichmentKit / Target** → Enrichment kit and sequencing target
        used.
            
        - **Relation / RelationName** → Relationship of the sample (e.g., self,
        mother, father).
            
        - **Files** → Array of associated files, including FASTQ details (file
        name, size, status).
            
        - **Metadata** → Creation and modification user + timestamps.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: seqSample
          in: path
          schema:
            type: string
          required: true
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"PatientId\": \"c3993197-b193-4276-8e41-8c6725aa5dc1\",\r\n        \"Patient\": \"12345\",\r\n        \"SerialNumber\": \"MARIAba\",\r\n        \"EnrichmentKitId\": \"ef64d222-7d72-4501-8272-bbb41f4b8d20\",\r\n        \"EnrichmentKit\": \"Default - Exons only\",\r\n        \"EnrichmentKitDescription\": \"Default - Exons only\",\r\n        \"Target\": 2,\r\n        \"TargetName\": \"Exome\",\r\n        \"Relation\": 0,\r\n        \"RelationName\": \"Self\",\r\n        \"FastqFilesCount\": 2,\r\n        \"DataSourceId\": \"acd15886-b5a2-4507-83ef-95adb8466d20\",\r\n        \"DataSource\": \"FTP\",\r\n        \"Files\": [\r\n            {\r\n                \"ID\": \"c51c370a-9e60-4516-9515-fc5b3f20dded\",\r\n                \"SeqSampleId\": \"17a66aa1-929e-4bce-8893-17185cbf144b\",\r\n                \"FileTypeName\": \"FastQ\",\r\n                \"FileType\": 1,\r\n                \"FileName\": \"12345_R1.fastq.gz\",\r\n                \"Ordinal\": 1,\r\n                \"Status\": 10,\r\n                \"StatusName\": \"Done\",\r\n                \"CreateDate\": \"2024-05-06T17:12:07.84\",\r\n                \"FileSize\": 1471191179,\r\n                \"DownloadedSize\": 1471191179,\r\n                \"Retries\": 0\r\n            },\r\n            {\r\n                \"ID\": \"a83a8c26-c294-4175-a3d0-ae831ac3af88\",\r\n                \"SeqSampleId\": \"17a66aa1-929e-4bce-8893-17185cbf144b\",\r\n                \"FileTypeName\": \"FastQ\",\r\n                \"FileType\": 1,\r\n                \"FileName\": \"12345_R2.fastq.gz\",\r\n                \"Ordinal\": 2,\r\n                \"Status\": 10,\r\n                \"StatusName\": \"Done\",\r\n                \"CreateDate\": \"2024-05-06T17:12:07.84\",\r\n                \"FileSize\": 1534629672,\r\n                \"DownloadedSize\": 1534629672,\r\n                \"Retries\": 0\r\n            }\r\n        ],\r\n        \"ExcludeFromLAF\": false,\r\n        \"PcrFree\": false,\r\n        \"ID\": \"17a66aa1-929e-4bce-8893-17185cbf144b\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2024-05-06T17:11:05.36\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2024-05-06T17:11:28.847\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /Patients:
    post:
      tags:
        - default
      summary: Patients
      description: >-
        ## Endpoint: Create or Retrieve Patients


        This endpoint allows you to retrieve a list of patients, or subjects,
        entered into the ssystem. It accepts a JSON payload and returns a
        structured response indicating the status of the operation.


        ### Request


        **Method:** POST  

        **URL:** `{{baseURL}}/Patients`


        **Request Body:**


        ``` json

        {
          "Query": null,       // Optional: A search query to filter patient records. Can be left null for all records.
          "Page": 0,          // Optional: The page number for pagination. Default is 0.
          "PageSize": 0       // Optional: The number of records per page. Default is 0 for no limit.
        }

         ```

        ### Response


        **Status Code:** 200  

        **Content-Type:** application/json


        **Response Body:**


        ``` json

        {
          "Code": "",          // A code indicating the result of the operation.
          "Data": [""],       // An array containing patient data or messages.
          "Info": null,       // Additional information about the operation, if any.
          "MoreInfo": null,   // Further details, if available.
          "NeedEval": true    // Indicates if further evaluation is required.
        }

         ```

        ### Notes


        - Ensure to provide appropriate values for `Page` and `PageSize` to
        manage the data returned effectively.
            
        - If `Query` is used, it should be formatted correctly to filter the
        patient records as needed.
            
        - The `NeedEval` flag in the response can be used to determine if
        further action is required after the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        \"12345\",\r\n        \"GI Cancer Demo\",\r\n        \"Cancer2\"\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /PatientReports:
    post:
      tags:
        - default
      summary: PatientReports
      description: >-
        ## Endpoint Description: Create Patient Report


        This endpoint allows the user to view patient reports by submitting the
        patient's serial number (PatientSn). The request is made using the HTTP
        POST method to the specified URL.


        ### Request Format


        - **URL**: `{{baseURL}}/PatientReports`
            
        - **Method**: POST
            
        - **Content-Type**: application/json
            

        ### Request Body


        The request body must be in JSON format and should include the following
        parameter:


        - **PatientSn** (string): The serial number of the patient for whom the
        report is being created.
            

        **Example Request Body:**


        ``` json

        {
          "PatientSn": "Familial62"
        }

         ```

        ### Response Structure


        Upon a successful request, the server will respond with a status code of
        `200` and a JSON object containing the following fields:


        - **Code** (string): A code indicating the status of the request (empty
        if successful).
            
        - **Data** (array): An array of report objects containing:
            
            - **ID** (string): The identifier of the report.
                
            - **ReportFileUrl** (string): URL of the generated report file.
                
            - **ReportFileUrl1** (string|null): An additional URL for the report file, if applicable.
                
            - **DataFileUrl** (string): URL for the data file associated with the report.
                
            - **ModelFileUrl** (string): URL for the model file related to the report.
                
            - **Notes** (string|null): Any additional notes related to the report.
                
            - **CreatedByUser** (string): The user who created the report.
                
            - **CreateDate** (string): The date the report was created.
                
            - **PatientSn** (string): The serial number of the patient.
                
            - **PatientName** (string|null): The name of the patient, if available.
                
            - **CaseSn** (string): The serial number of the case.
                
            - **CaseName** (string): The name of the case.
                
            - **CaseStatus** (string): The current status of the case.
                
            - **CaseSubStatus** (string): The sub-status of the case.
                
            - **CaseAssignedToUser** (string|null): The user to whom the case is assigned.
                
            - **CaseModifyDate** (string): The date the case was last modified.
                
            - **SampleSn** (string): The sample serial number.
                
            - **SampleVcfUrl** (string|null): URL for the sample VCF file, if applicable.
                
        - **Info** (object|null): Additional information, if any.
            
        - **MoreInfo** (object|null): Further details, if necessary.
            
        - **NeedEval** (boolean): Indicates whether further evaluation is
        needed.
            

        **Example Response:**


        ``` json

        {
          "Code": "",
          "Data": [
            {
              "ID": "",
              "ReportFileUrl": "",
              "ReportFileUrl1": null,
              "DataFileUrl": "",
              "ModelFileUrl": "",
              "Notes": null,
              "CreatedByUser": "",
              "CreateDate": "",
              "PatientSn": "",
              "PatientName": null,
              "CaseSn": "",
              "CaseName": "",
              "CaseStatus": "",
              "CaseSubStatus": "",
              "CaseAssignedToUser": null,
              "CaseModifyDate": "",
              "SampleSn": "",
              "SampleVcfUrl": null
            }
          ],
          "Info": null,
          "MoreInfo": null,
          "NeedEval": true
        }

         ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                PatientSn: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"ID\": \"6086a595-1b76-47fb-92d5-768848689193\",\r\n            \"ReportFileUrl\": \"12345.pdf\",\r\n            \"DataFileUrl\": \"12345 - data.tsv.zip\",\r\n            \"ModelFileUrl\": \"12345.json.gz\",\r\n            \"CreatedByUser\": \"Geneyx User1\",\r\n            \"CreateDate\": \"2025-03-18T18:18:48.127\",\r\n            \"PatientSn\": \"12345\",\r\n            \"PatientName\": \"12345\",\r\n            \"CaseSn\": \"DEMO SOMATIC\",\r\n            \"CaseName\": \"Tumor / Normal Analysis\",\r\n            \"CaseStatus\": \"Open\",\r\n            \"CaseSubStatus\": \"High Priority\",\r\n            \"CaseModifyDate\": \"2025-07-30T11:58:13.603\",\r\n            \"SampleSn\": \"T2\",\r\n            \"SampleVcfUrl\": \"PAN2.vcf.gz\"\r\n        },\r\n        {\r\n            \"ID\": \"6f7361e7-5c81-4112-9162-95a1d313f5ec\",\r\n            \"ReportFileUrl\": \"123456.pdf\",\r\n            \"DataFileUrl\": \"123456 - data.tsv.zip\",\r\n            \"ModelFileUrl\": \"123456.json.gz\",\r\n            \"CreatedByUser\": \"Geneyx User1\",\r\n            \"CreateDate\": \"2025-03-17T21:43:25.947\",\r\n            \"PatientSn\": \"Cancer2\",\r\n            \"PatientName\": \"AA\",\r\n            \"CaseSn\": \"DEMO SOMATIC\",\r\n            \"CaseName\": \"Tumor / Normal Analysis\",\r\n            \"CaseStatus\": \"Open\",\r\n            \"CaseSubStatus\": \"High Priority\",\r\n            \"CaseModifyDate\": \"2025-07-30T11:58:13.603\",\r\n            \"SampleSn\": \"T2\",\r\n            \"SampleVcfUrl\": \"PAN2.vcf.gz\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /Protocols:
    post:
      tags:
        - default
      summary: Protocols
      description: >-
        ### **Endpoint Description**


        This endpoint retrieves a list of available protocols configured in the
        Geneyx platform. Protocols typically define analysis workflows,
        pipelines, or interpretation settings associated with uploaded samples
        or cases.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameters:


        - **Query** (string or null, optional): A string to filter protocol
        names or identifiers. If `null`, all available protocols are returned.
            
        - **Page** (integer, optional): Page number for pagination. A value of
        `0` returns the first page.
            
        - **PageSize** (integer, optional): Number of items per page. A value of
        `0` disables pagination and returns the full list.
            

        **Example Request:**


        ```

        jsonCopy code{
          "Query": null,
          "Page": 0,
          "PageSize": 0
        }

         ```

        ---


        ### **Expected Response**


        Upon a successful request, the server will return a JSON object with the
        following fields:


        - **Code** (string): `"success"` if the request completed successfully.
            
        - **Data** (array of objects): Each object represents a protocol with
        attributes like `SerialNumber`, `Name`, and metadata.
            
        - **Info** (nullable): Additional metadata if relevant; typically
        `null`.
            
        - **MoreInfo** (nullable): Extended context; typically `null`.
            
        - **NeedEval** (boolean): Indicates whether further evaluation is
        required; usually `false`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"SerialNumber\": \"R21\",\r\n            \"Name\": \"R21-Fetal anomalies\",\r\n            \"DefaultEnrichmentKit\": \"ExomeCG\"\r\n        },\r\n        {\r\n            \"SerialNumber\": \"RG_SINGLE\",\r\n            \"Name\": \"Short-Read Singleton Analysis\",\r\n            \"DefaultEnrichmentKit\": \"\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /ReportList:
    post:
      tags:
        - default
      summary: ReportList
      description: >-
        ## API Endpoint: Generate Report List


        ### Method


        `POST`


        ### Endpoint


        `{{baseURL}}/ReportList`


        ### Request Parameters


        The request body must be in JSON format and include the following
        parameter:


        - **StartTime** (string): The start time for the report generation in
        ISO 8601 format.
            

        ### Example Request Body


        ``` json

        {
          "StartTime": "2025-07-06T18:36:47.966Z"
        }

         ```

        ### Response Format


        On a successful request, the API returns a JSON response with a status
        code of `200`. The response structure is as follows:


        - **Code** (string): A code indicating the status of the request.
            
        - **Data** (array): An array containing report details, where each
        report object includes:
            
            - **ID** (string): The unique identifier for the report.
                
            - **ReportFileUrl** (string): URL to access the report file.
                
            - **ReportFileUrl1** (string or null): An additional URL for the report file, if available.
                
            - **DataFileUrl** (string or null): URL to access the data file, if available.
                
            - **ModelFileUrl** (string or null): URL to access the model file, if available.
                
            - **Notes** (string or null): Any notes related to the report.
                
            - **CreatedByUser** (string): The user who created the report.
                
            - **CreateDate** (string): The date the report was created.
                
            - **PatientSn** (string): The serial number of the patient.
                
            - **PatientName** (string): The name of the patient.
                
            - **CaseSn** (string): The serial number of the case.
                
            - **CaseName** (string): The name of the case.
                
            - **CaseStatus** (string): The current status of the case.
                
            - **CaseSubStatus** (string): The sub-status of the case.
                
            - **CaseAssignedToUser** (string or null): The user assigned to the case, if applicable.
                
            - **CaseModifyDate** (string): The date the case was last modified.
                
            - **SampleSn** (string): The serial number of the sample.
                
            - **SampleVcfUrl** (string): URL to access the sample VCF file.
                
        - **Info** (null): Additional information, if any.
            
        - **MoreInfo** (null): More detailed information, if available.
            
        - **NeedEval** (boolean): Indicates if further evaluation is needed.
            

        ### Example Response


        ``` json

        {
          "Code": "",
          "Data": [
            {
              "ID": "",
              "ReportFileUrl": "",
              "ReportFileUrl1": null,
              "DataFileUrl": null,
              "ModelFileUrl": null,
              "Notes": null,
              "CreatedByUser": "",
              "CreateDate": "",
              "PatientSn": "",
              "PatientName": "",
              "CaseSn": "",
              "CaseName": "",
              "CaseStatus": "",
              "CaseSubStatus": "",
              "CaseAssignedToUser": null,
              "CaseModifyDate": "",
              "SampleSn": "",
              "SampleVcfUrl": ""
            }
          ],
          "Info": null,
          "MoreInfo": null,
          "NeedEval": true
        }

         ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                StartTime: '2025-07-06T18:36:47.966Z'
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        {\r\n            \"ID\": \"820f5293-0864-42ff-b9bf-010bababb0db\",\r\n            \"ReportFileUrl\": \"DEMO PGxv1 v6.2 - PGX - 250818_1505.pdf\",\r\n            \"CreatedByUser\": \"Geneyx User 2\",\r\n            \"CreateDate\": \"2025-08-18T15:05:14.507\",\r\n            \"PatientSn\": \"ExamplePgx\",\r\n            \"CaseSn\": \"DEMO PGxv1 v6.2\",\r\n            \"CaseName\": \"PGX\",\r\n            \"CaseStatus\": \"Open\",\r\n            \"CaseSubStatus\": \"High Priority\",\r\n            \"CaseAssignedToUser\": \"Geneyx User 1 (geneyxuser1@geneyx.com)\",\r\n            \"CaseModifyDate\": \"2025-07-30T11:59:09.267\",\r\n            \"SampleSn\": \"MARIA_10230396_S29_L001.dragen.wes.grch37.20230811-162804\",\r\n            \"SampleVcfUrl\": \"MARIA_10230396_S29_L001.dragen.wes.grch37.20230811-162804.vcf.gz\"\r\n        },\r\n        {\r\n            \"ID\": \"48c2735c-d015-46e3-8bcd-9014c8de6f2e\",\r\n            \"ReportFileUrl\": \"DEMO CmpHetSNV_CNV v6.2 - Short-Read Singleton Analysis - 250808_1344.pdf\",\r\n            \"ModelFileUrl\": \"DEMO CmpHetSNV_CNV v6.2 - Short-Read Singleton Analysis - 250808_1344.json.gz\",\r\n            \"CreatedByUser\": \"Geneyx User 1\",\r\n            \"CreateDate\": \"2025-08-08T13:44:51.747\",\r\n            \"PatientSn\": \"CNV Comp Het\",\r\n            \"PatientName\": \"SRS_CNV_SNV_Demo\",\r\n            \"CaseSn\": \"DEMO CmpHetSNV_CNV v6.2\",\r\n            \"CaseName\": \"Short-Read Singleton Analysis\",\r\n            \"CaseStatus\": \"Open\",\r\n            \"CaseSubStatus\": \"High Priority\",\r\n            \"CaseAssignedToUser\": \"Geneyx User 1 (geneyxuser1@geneyx.com)\",\r\n            \"CaseModifyDate\": \"2025-07-30T11:54:06.027\",\r\n            \"SampleSn\": \"37613.dragen.wes.grch37.20221110-191353.vcf.gz\",\r\n            \"SampleVcfUrl\": \"37613.dragen.wes.grch37.20221110-191353.vcf.gz\"\r\n        }\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /ReportURL:
    post:
      tags:
        - default
      summary: ReportURL
      description: >-
        ## Endpoint: Create Report URL


        This endpoint allows users to generate a report URL by submitting a
        request with a specified file name. The service processes the request
        and responds with a URL that can be used to access the generated report.


        ### Request


        - **Method**: POST
            
        - **URL**: `{{baseURL}}/ReportURL`
            
        - ParameterTypeDescriptionfileNamestringThe name of the file for which
        the report URL is being generated.
            

        ### Example Request Body


        ``` json

        {
          "fileName": "ENE250803100220 - PGXv2TestCPI ..."
        }

         ```

        ### Response


        - **Status Code**: 200
            
        - **Content-Type**: application/json
            

        The response will contain the following structure:


        ``` json

        {
          "Code": "",
          "Data": {
            "fileUrl": ""
          },
          "Info": null,
          "MoreInfo": null,
          "NeedEval": true
        }

         ```

        #### Response Fields


        - **Code**: A string indicating the status code of the operation (empty
        string if no error).
            
        - **Data**: An object containing the result of the request.
            
            - **fileUrl**: A string that provides the URL to access the generated report.
                
        - **Info**: Additional information related to the request (null if not
        applicable).
            
        - **MoreInfo**: Further details if available (null if not applicable).
            
        - **NeedEval**: A boolean indicating whether further evaluation is
        needed.
            

        ### Summary


        This endpoint is essential for users who need to generate and retrieve
        URLs for their reports based on specific file names. Ensure that the
        `fileName` parameter is correctly formatted to receive a valid response.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fileName: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: 200-Success (PDF URL)
                  value: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"fileUrl\": \"https://analysis-files.geneyx.com:443/reports/12345.pdf\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
                example-1:
                  summary: 200-Success (TSV URL)
                  value: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"fileUrl\": \"https://analysis-files.geneyx.com:443/reports/12345.data.tsv.zip\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
                example-2:
                  summary: 200-Success (JSON URL)
                  value: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"fileUrl\": \"https://analysis-files.geneyx.com:443/reports/12345.json.gz\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /sample/{sampleSn}:
    get:
      tags:
        - default
      summary: Sample
      description: >-
        ### GET Patient Record


        This endpoint allows you to obtain a specific patient record from the
        system.


        #### Request Parameters


        - **URL Parameter**:
            
            - `patientSn` (string): The unique identifier for the patient whose record you wish to display. This parameter is required.
                

        #### Response


        Upon success, the response will confirm the operation. The structure of
        the response may include:


        - A success message indicating that the patient record has been
        displayed.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: sampleSn
          in: path
          schema:
            type: string
          required: true
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"PatientId\": \"c3993197-b193-4276-8e41-8c6725aa5dc1\",\r\n        \"Patient\": \"12345\",\r\n        \"SerialNumber\": \"12345\",\r\n        \"EnrichmentKitId\": \"af81fbe6-0cdc-476e-808a-fd647d6a1967\",\r\n        \"EnrichmentKit\": \"WGS  Capture\",\r\n        \"EnrichmentKitDescription\": \"WGS\",\r\n        \"Target\": 2,\r\n        \"TargetName\": \"Exome\",\r\n        \"BamUrl\": \"https://analysis.geneyx.com/api/12345.bam\",\r\n        \"BamFileExists\": true,\r\n        \"MethylationFileExists\": false,\r\n        \"CnvNormFileExists\": false,\r\n        \"QcMetricsUrl\": \"https://analysis.geneyx.com/api/12345.qc-metrics.zip\",\r\n        \"QcMetricsFileExists\": true,\r\n        \"Relation\": 0,\r\n        \"RelationName\": \"Self\",\r\n        \"GenomeBuild\": 0,\r\n        \"GenomeBuildName\": \"hg19\",\r\n        \"SeqSampleId\": \"17a66aa1-929e-4bce-8893-17185cbf144b\",\r\n        \"Assignment\": {\r\n            \"AssignedBy\": \"Geneyx User\",\r\n            \"AssignDate\": \"2025-08-28T12:46:41.283\",\r\n            \"GroupCodes\": [\r\n                \"cardio\"\r\n            ],\r\n            \"Groups\": [\r\n                {\r\n                    \"Code\": \"cardio\",\r\n                    \"Name\": \"Cardio\"\r\n                }\r\n            ]\r\n        },\r\n        \"Files\": [\r\n            {\r\n                \"ID\": \"ecd14839-0f53-4aa9-be23-909dcd8fd980\",\r\n                \"FileTypeName\": \"BAM\",\r\n                \"FileType\": 40,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.bam\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.63\"\r\n            },\r\n            {\r\n                \"ID\": \"16c8a746-842f-4b3e-aeba-7171be69669a\",\r\n                \"FileTypeName\": \"BAI\",\r\n                \"FileType\": 41,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.bam.bai\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.63\"\r\n            },\r\n            {\r\n                \"ID\": \"2773f45c-953c-4e88-9097-407832344744\",\r\n                \"FileTypeName\": \"QcMetrics\",\r\n                \"FileType\": 5,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.qc-metrics.zip\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.897\"\r\n            },\r\n            {\r\n                \"ID\": \"ae6c8324-e641-41d1-9aef-fad0a4834b4e\",\r\n                \"FileTypeName\": \"SV\",\r\n                \"FileType\": 21,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.sv.unified.vcf.gz\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.63\",\r\n                \"TotalVariants\": 253\r\n            },\r\n            {\r\n                \"ID\": \"406137b6-16ca-46e1-b4e3-10b816e09c42\",\r\n                \"FileTypeName\": \"SNV\",\r\n                \"FileType\": 1,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.vcf.gz\",\r\n                \"CreateDate\": \"2024-05-06T17:34:03.953\",\r\n                \"TotalVariants\": 167587\r\n            }\r\n        ],\r\n        \"ExcludeFromLAF\": false,\r\n        \"LatestVS\": \"\",\r\n        \"RunPgx\": false,\r\n        \"ID\": \"176297d6-f137-4b0b-bab8-d1d1e53436b0\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2024-05-06T17:15:02.637\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2025-08-26T19:56:08.073\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /sequenceMachine/{sequenceMachineSn}:
    get:
      tags:
        - default
      summary: SequenceMachine
      description: >-
        ### GET Sequence Machine


        This endpoint allows you to view if the sequence machine is present for
        a given account and associated information for the sequencing machine.


        #### Request Parameters


        - **URL Parameter**:
            
            - sequenceMachineSn (string): The unique identifier for the sequence machine.
                

        #### Response


        Upon success, the response will confirm the operation. The structure of
        the response may include:


        - A success message indicating that the sequence machine is present.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: sequenceMachineSn
          in: path
          schema:
            type: string
          required: true
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"SerialNumber\": \"Flongle\",\r\n        \"Description\": \"ONT\",\r\n        \"VendorName\": \"Unknown\",\r\n        \"Vendor\": 0,\r\n        \"ID\": \"917323ea-c1f3-453e-bb90-067e55dc5511\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2023-07-04T14:36:15.627\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2023-07-04T14:36:15.627\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /PermittedSampleUsers/{sampleSn}:
    get:
      tags:
        - default
      summary: PermittedSampleUsers
      description: >-
        ### GET Sequence Machine


        This endpoint allows you to obtain if the sequence machine for a given
        sample is present.


        #### Request Parameters


        - **URL Parameter**:
            
            - `sampleSn` (string): The unique identifier for the sample. This parameter is required.
                

        #### Response


        Upon success, the response will confirm the operation. The structure of
        the response may include:


        - A success message indicating that the patient record has been
        displayed.
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
        - name: sampleSn
          in: path
          schema:
            type: string
          required: true
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"PatientId\": \"c3993197-b193-4276-8e41-8c6725aa5dc1\",\r\n        \"Patient\": \"12345\",\r\n        \"SerialNumber\": \"12345\",\r\n        \"EnrichmentKitId\": \"af81fbe6-0cdc-476e-808a-fd647d6a1967\",\r\n        \"EnrichmentKit\": \"WGS  Capture\",\r\n        \"EnrichmentKitDescription\": \"WGS\",\r\n        \"Target\": 2,\r\n        \"TargetName\": \"Exome\",\r\n        \"BamUrl\": \"https://analysis.geneyx.com/api/12345.bam\",\r\n        \"BamFileExists\": true,\r\n        \"MethylationFileExists\": false,\r\n        \"CnvNormFileExists\": false,\r\n        \"QcMetricsUrl\": \"https://analysis.geneyx.com/api/12345.qc-metrics.zip\",\r\n        \"QcMetricsFileExists\": true,\r\n        \"Relation\": 0,\r\n        \"RelationName\": \"Self\",\r\n        \"GenomeBuild\": 0,\r\n        \"GenomeBuildName\": \"hg19\",\r\n        \"SeqSampleId\": \"17a66aa1-929e-4bce-8893-17185cbf144b\",\r\n        \"Assignment\": {\r\n            \"AssignedBy\": \"Geneyx User\",\r\n            \"AssignDate\": \"2025-08-28T12:46:41.283\",\r\n            \"GroupCodes\": [\r\n                \"cardio\"\r\n            ],\r\n            \"Groups\": [\r\n                {\r\n                    \"Code\": \"cardio\",\r\n                    \"Name\": \"Cardio\"\r\n                }\r\n            ]\r\n        },\r\n        \"Files\": [\r\n            {\r\n                \"ID\": \"ecd14839-0f53-4aa9-be23-909dcd8fd980\",\r\n                \"FileTypeName\": \"BAM\",\r\n                \"FileType\": 40,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.bam\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.63\"\r\n            },\r\n            {\r\n                \"ID\": \"16c8a746-842f-4b3e-aeba-7171be69669a\",\r\n                \"FileTypeName\": \"BAI\",\r\n                \"FileType\": 41,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.bam.bai\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.63\"\r\n            },\r\n            {\r\n                \"ID\": \"2773f45c-953c-4e88-9097-407832344744\",\r\n                \"FileTypeName\": \"QcMetrics\",\r\n                \"FileType\": 5,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.qc-metrics.zip\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.897\"\r\n            },\r\n            {\r\n                \"ID\": \"ae6c8324-e641-41d1-9aef-fad0a4834b4e\",\r\n                \"FileTypeName\": \"SV\",\r\n                \"FileType\": 21,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.sv.unified.vcf.gz\",\r\n                \"CreateDate\": \"2024-05-06T17:34:04.63\",\r\n                \"TotalVariants\": 253\r\n            },\r\n            {\r\n                \"ID\": \"406137b6-16ca-46e1-b4e3-10b816e09c42\",\r\n                \"FileTypeName\": \"SNV\",\r\n                \"FileType\": 1,\r\n                \"FileSubType\": 0,\r\n                \"FileName\": \"12345.vcf.gz\",\r\n                \"CreateDate\": \"2024-05-06T17:34:03.953\",\r\n                \"TotalVariants\": 167587\r\n            }\r\n        ],\r\n        \"ExcludeFromLAF\": false,\r\n        \"LatestVS\": \"\",\r\n        \"RunPgx\": false,\r\n        \"ID\": \"176297d6-f137-4b0b-bab8-d1d1e53436b0\",\r\n        \"CreatedByUser\": \"Geneyx User\",\r\n        \"CreateDate\": \"2024-05-06T17:15:02.637\",\r\n        \"ModifiedByUser\": \"Geneyx User\",\r\n        \"ModifyDate\": \"2025-08-26T19:56:08.073\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /Samples:
    post:
      tags:
        - default
      summary: Samples
      description: >-
        ## Endpoint Description


        This endpoint allows users to retrieve samples based on the provided
        query parameters. It is a POST request that processes the input to
        return relevant sample information.


        ### Request Parameters


        The request body should be formatted as a JSON object with the following
        parameters:


        - **Query** (nullable): A string parameter that can be used to filter
        the samples. If set to `null`, no filtering will be applied.
            
        - **Page** (integer): An integer indicating the page number for
        pagination. A value of `0` typically represents the first page.
            
        - **PageSize** (integer): An integer that specifies the number of items
        to return per page. A value of `0` indicates that no specific limit is
        set on the number of items returned.
            

        ### Expected Response


        Upon a successful request, the server will respond with a status code of
        `200` and a JSON object containing the following fields:


        - **Code**: A string that may contain error codes or status messages. In
        this case, it is empty.
            
        - **Data**: An array of strings containing the sample data. In this
        instance, it returns an array with an empty string, indicating no
        samples were found or returned.
            
        - **Info**: A nullable field that may provide additional information; it
        is `null` in this response.
            
        - **MoreInfo**: A nullable field for extra details; it is `null` in this
        response.
            
        - **NeedEval**: A boolean indicating whether further evaluation is
        needed; it is set to `true`.
            

        ### Notes


        - Ensure that the parameters are correctly formatted to receive the
        desired output.
            
        - The pagination parameters (`Page` and `PageSize`) are essential for
        managing large datasets effectively.
            
        - If no data is returned, check the `Query` parameter for accuracy or
        adjust pagination settings.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        \"PB1.vcf.gz\",\r\n        \"12345\"\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /SampleAssignment:
    post:
      tags:
        - default
      summary: SampleAssignment
      description: >-
        ### Endpoint Description


        This endpoint allows users to create a new assignment by submitting
        relevant details through a POST request. The request includes
        information about the assignment's serial number, the group assignment
        details, and the user to whom the assignment is assigned.


        ### Request Body Format


        The request body must be in JSON format and should include the following
        parameters:


        - **SerialNumber** (string): A unique identifier for the assignment.
            
        - **GroupAssignment** (array of objects): An array containing group
        assignment details, where each object includes:
            
            - **Code** (string): The code associated with the group.
                
            - **Name** (string): The name of the group.
                
        - **AssignedToUserId** (string): The unique identifier of the user to
        whom the assignment is assigned.
            
        - **AssignedToFullName** (string): The full name of the user assigned.
            

        **Example Request Body:**


        ``` json

        {
          "SerialNumber": "string",
          "GroupAssignment": [
            {
              "Code": "string",
              "Name": "string"
            }
          ],
          "AssignedToUserId": "string",
          "AssignedToFullName": "string"
        }

         ```

        ### Response Format


        Upon successful execution, the response will return a status code of
        `200` and will include the following JSON structure:


        - **Code** (string): A code indicating the result of the operation.
            
        - **Data** (object): Contains details about the assignment, including:
            
            - **UserId** (null): The ID of the user assigned (if applicable).
                
            - **FullName** (null): The full name of the assigned user (if applicable).
                
            - **Name** (null): The name of the assignment (if applicable).
                
            - **Email** (null): The email of the assigned user (if applicable).
                
            - **AssignedBy** (string): The identifier of the user who assigned the task.
                
            - **AssignDate** (string): The date when the assignment was made.
                
            - **GroupCodes** (array): An array of group codes associated with the assignment.
                
            - **Groups** (array): An array of group details associated with the assignment.
                
        - **Info** (null): Additional information (if any).
            
        - **MoreInfo** (null): Further information (if any).
            
        - **NeedEval** (boolean): Indicates whether evaluation is needed for the
        assignment.
            

        **Example Response:**


        ``` json

        {
          "Code": "",
          "Data": {
            "UserId": null,
            "FullName": null,
            "Name": null,
            "Email": null,
            "AssignedBy": "",
            "AssignDate": "",
            "GroupCodes": [],
            "Groups": []
          },
          "Info": null,
          "MoreInfo": null,
          "NeedEval": true
        }

         ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SerialNumber: string
                GroupAssignment:
                  - Code: string
                    Name: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"AssignedBy\": \"Geneyx User1\",\r\n        \"AssignDate\": \"2025-08-28T12:46:41.2819446Z\",\r\n        \"GroupCodes\": [\r\n            \"cardio\"\r\n        ],\r\n        \"Groups\": [\r\n            {\r\n                \"Code\": \"cardio\",\r\n                \"Name\": \"Cardio\"\r\n            }\r\n        ]\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /SequenceMachines:
    post:
      tags:
        - default
      summary: SequenceMachines
      description: >-
        ### **Endpoint Description**


        This endpoint retrieves a list of supported sequencing machines
        available in the Geneyx platform. It can be used to populate dropdowns,
        validate machine names, or associate samples with sequencing hardware.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameters:


        - **Query** (string or null, optional): A string to filter sequencing
        machine names. If `null`, all machines are returned.
            
        - **Page** (integer, optional): Page number for pagination. A value of
        `0` returns the first page.
            
        - **PageSize** (integer, optional): Number of items per page. A value of
        `0` disables pagination and returns the full list.
            

        **Example Request:**


        ```

        {
          "Query": null,
          "Page": 0,
          "PageSize": 0
        }

         ```

        ---


        ### **Expected Response**


        Upon a successful request, the server will return a JSON object
        containing the following fields:


        - **Code** (string): `"success"` if the request completed successfully.
            
        - **Data** (array of strings): A list of supported sequencing machine
        names.
            
        - **Info** (nullable): May contain additional metadata; typically
        `null`.
            
        - **MoreInfo** (nullable): Extended context; typically `null`.
            
        - **NeedEval** (boolean): Indicates whether follow-up evaluation is
        needed; usually `false`.
            

        **Example Response:**


        ```

        {
          "Code": "success",
          "Data": [
            "400",
            "HiSeq 2500",
            "HiSeq 4000",
            "Ion GeneStudio S5",
            "Ion Torrent Genexus",
            "iSeq",
            "MiniSeq",
            "MiSeq",
            "MiSeq DX",
            "NextSeq 1000",
            "NextSeq 2000",
            "NextSeq 500",
            "NextSeq 550",
            "NextSeq DX 550",
            "NovaSeq 6000",
            "ONSO SYSTEM",
            "PacBio Sequel IIe",
            "REVIO SYSTEM",
            "SEQUEL IIe SYSTEM",
            "x"
          ],
          "Info": null,
          "MoreInfo": null,
          "NeedEval": false
        }

         ```

        ---


        ### **Notes**


        - Use this endpoint to validate sequencing machine names before
        assigning them to a sample or protocol.
            
        - Pagination is supported but optional. Setting `PageSize: 0` returns
        the entire list.
            
        - Some machine names may include identifiers used internally; ensure you
        reference them exactly as returned.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        \"Flongle\",\r\n        \"GridION\",\r\n        \"HiSeq 2500\",\r\n        \"HiSeq 4000\",\r\n        \"Ion GeneStudio S5\",\r\n        \"Ion Torrent Genexus\",\r\n        \"iSeq\",\r\n        \"MinION\",\r\n        \"MiniSeq\",\r\n        \"MiSeq\",\r\n        \"MiSeq DX\",\r\n        \"NextSeq 1000\",\r\n        \"NextSeq 2000\",\r\n        \"NextSeq 500\",\r\n        \"NextSeq 550\",\r\n        \"NextSeq DX 550\",\r\n        \"NovaSeq 6000\",\r\n        \"ONSO SYSTEM\",\r\n        \"PromethION 2 & 2 Solo\",\r\n        \"PromethION 24 & 48\",\r\n        \"REVIO SYSTEM\",\r\n        \"Sequel II system\",\r\n        \"Sequel IIe system\",\r\n        \"Sequel system\",\r\n        \"Vega\"\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /SeqSamples:
    post:
      tags:
        - default
      summary: SeqSamples
      description: >-
        ### **Endpoint Description**


        This endpoint retrieves a list of sequencing samples present in the
        Geneyx platform.


        ---


        ### **Request Parameters**


        The request body should be formatted as a JSON object with the following
        parameters:


        - **Query** (string or null, optional): A string to filter sequencing
        machine names. If `null`, all machines are returned.
            
        - **Page** (integer, optional): Page number for pagination. A value of
        `0` returns the first page.
            
        - **PageSize** (integer, optional): Number of items per page. A value of
        `0` disables pagination and returns the full list.
            

        **Example Request:**


        ```

        {
          "Query": null,
          "Page": 0,
          "PageSize": 0
        }

         ```

        ---


        ### **Expected Response**


        Upon a successful request, the server will return a JSON object
        containing the following fields:


        - **Code** (string): `"success"` if the request completed successfully.
            
        - **Data** (array of strings): A list of supported sequencing sample
        names.
            
        - **Info** (nullable): May contain additional metadata; typically
        `null`.
            
        - **MoreInfo** (nullable): Extended context; typically `null`.
            
        - **NeedEval** (boolean): Indicates whether follow-up evaluation is
        needed; usually `false`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Query: null
                Page: 0
                PageSize: 0
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": [\r\n        \"FASTQFILE\",\r\n        \"TESTY\",\r\n        \"1001122611\",\r\n        \"testsuzie\",\r\n        \"test210524\",\r\n        \"MARIAba\",\r\n        \"200040893.V350196722\",\r\n        \"MARIAb_10230396_S29_L001\",\r\n        \"MARIAa_10230396_S29_L001\",\r\n        \"MARIA_10\",\r\n        \"MARIA_\",\r\n        \"MARIA\",\r\n        \"220500000050-DS14_22May50-DL014_S14\",\r\n        \"37613\",\r\n        \"62436756\",\r\n        \"1235456161\"\r\n    ],\r\n    \"NeedEval\": false\r\n}"
  /UpdateSample:
    post:
      tags:
        - default
      summary: UpdateSample
      description: >-
        ### Update Sample Endpoint


        This endpoint allows users to update sample information in the system.
        It accepts a POST request with a JSON payload containing various
        parameters related to the sample.


        #### Request


        - **Method**: POST
            
        - **Endpoint**: `{{baseURL}}/UpdateSample`
            
        - **Content-Type**: application/json
            

        #### Request Body Parameters


        The request body should be a JSON object with the following parameters:


        - **SerialNumber** (string): The serial number of the sample.
            
        - **TakenDate** (string): The date the sample was taken, in ISO 8601
        format.
            
        - **SequenceDate** (string): The date the sequencing was performed, in
        ISO 8601 format.
            
        - **ReceivedDate** (string): The date the sample was received, in ISO
        8601 format.
            
        - **Type** (string): The type of the sample.
            
        - **Target** (string): The target information for the sample.
            
        - **Source** (string): The source of the sample.
            
        - **SequenceMachineId** (string): The ID of the sequencing machine used.
            
        - **EnrichmentKitId** (string): The ID of the enrichment kit used.
            
        - **Notes** (string): Additional notes regarding the sample.
            
        - **Relation** (string): The relation type of the sample.
            
        - **GenomeBuild** (string): The genome build version.
            
        - **BamUrl** (null): The URL for the BAM file (currently null).
            
        - **MethylationUrl** (null): The URL for the methylation file (currently
        null).
            
        - **LocalBamUrl** (string): The local URL for the BAM file.
            
        - **LocalMethylationUrl** (string): The local URL for the methylation
        file.
            

        #### Response


        Upon a successful request, the server will respond with a status code of
        **200** and a JSON object containing the following fields:


        - **Code** (string): A code indicating the status of the operation.
            
        - **Data** (object): Contains detailed information about the updated
        sample, including:
            
            - **PatientId** (string): The ID of the patient associated with the sample.
                
            - **Patient** (string): The name of the patient.
                
            - **SerialNumber** (string): The serial number of the sample.
                
            - **BamFileExists** (boolean): Indicates if the BAM file exists.
                
            - **MethylationFileExists** (boolean): Indicates if the methylation file exists.
                
            - **LocalBamUrl** (string): The local URL for the BAM file.
                
            - **LocalMethylationUrl** (string): The local URL for the methylation file.
                
            - **ErrorDescription** (null): Any error description if applicable.
                
            - **Files** (array): An array of file objects related to the sample.
                
            - **ExcludeFromLAF** (boolean): Indicates if the sample is excluded from LAF.
                
            - **NeedEval** (boolean): Indicates if evaluation is needed for the sample.
                

        This endpoint is essential for managing and updating sample data
        effectively within the system.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SerialNumber: string
                TakenDate: '2025-08-06T18:36:47.991Z'
                SequenceDate: '2025-08-06T18:36:47.991Z'
                ReceivedDate: '2025-08-06T18:36:47.991Z'
                Type: string
                Target: string
                Source: string
                SequenceMachineId: string
                EnrichmentKitId: string
                Notes: string
                Relation: string
                GenomeBuild: string
                BamUrl: null
                MethylationUrl: null
                LocalBamUrl: string
                LocalMethylationUrl: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": {\r\n        \"PatientId\": \"b229b3fe-b690-4bbf-886f-9bbcdd359468\",\r\n        \"Patient\": \"JeanTestCNVTrio\",\r\n        \"SerialNumber\": \"PB1.vcf.gz\",\r\n        \"EnrichmentKitId\": \"ef64d222-7d72-4501-8272-bbb41f4b8d20\",\r\n        \"EnrichmentKit\": \"Default - Exons only\",\r\n        \"EnrichmentKitDescription\": \"Default - Exons only\",\r\n        \"TakenDate\": \"2025-08-01T09:15:00Z\",\r\n        \"SeqDate\": \"2025-08-02T14:45:00Z\",\r\n        \"ReceivedDate\": \"2025-08-03T08:30:00Z\",\r\n        \"Target\": 1,\r\n        \"TargetName\": \"WholeGenome\",\r\n        \"Source\": 3,\r\n        \"SourceName\": \"Blood\",\r\n        \"BamUrl\": \"https://files.geneyx.com/123456.bam\",\r\n        \"BamFileExists\": false,\r\n        \"MethylationFileExists\": false,\r\n        \"CnvNormFileExists\": false,\r\n        \"QcMetricsFileExists\": false,\r\n        \"LocalBamUrl\": \"/data/samples/123456.bam\",\r\n        \"LocalMethylationUrl\": \"/data/samples/123456.methylation.bam\",\r\n        \"Notes\": \"Proband sample, priority sequencing case\",\r\n        \"Relation\": 0,\r\n        \"RelationName\": \"Self\",\r\n        \"GenomeBuild\": 1,\r\n        \"GenomeBuildName\": \"hg38\",\r\n        \"Assignment\": {\r\n            \"AssignDate\": \"0001-01-01T00:00:00\",\r\n            \"GroupCodes\": [],\r\n            \"Groups\": []\r\n        },\r\n        \"Files\": [\r\n            {\r\n                \"ID\": \"b6866467-5ca6-4e59-9383-72089f4995dd\",\r\n                \"FileTypeName\": \"SNV\",\r\n                \"FileType\": 1,\r\n                \"FileName\": \"PB1.vcf.gz\",\r\n                \"CreateDate\": \"2025-04-16T22:19:33.537\",\r\n                \"TotalVariants\": 181949\r\n            }\r\n        ],\r\n        \"ExcludeFromLAF\": false,\r\n        \"LatestVS\": \"\",\r\n        \"RunPgx\": false,\r\n        \"ID\": \"aaec3437-b0ef-4fc7-921a-d7ffab13e493\",\r\n        \"CreatedByUser\": \"Geneyx User2\",\r\n        \"CreateDate\": \"2025-04-16T22:19:33.537\",\r\n        \"ModifiedByUser\": \"Geneyx User1\",\r\n        \"ModifyDate\": \"2025-08-27T22:01:52.4367445Z\"\r\n    },\r\n    \"NeedEval\": false\r\n}"
  /UpdateSampleQc:
    post:
      tags:
        - default
      summary: UpdateSampleQc
      description: >-
        ### Update Sample Quality Control


        This endpoint allows you to update the quality control data for a
        specific sample identified by its serial number. This information is
        pulled into the JSON report.


        #### Request Method


        - **POST**
            

        #### Endpoint


        - `{{baseURL}}/UpdateSampleQc`
            

        #### Request Body


        The request must include a JSON payload with the following parameters:


        - **SampleSerialNumber** (string): The unique identifier for the sample.
        This should be the serial number of the sample you want to update.
            
        - **SampleQcData** (string): A JSON string containing quality control
        data for the sample. This includes various metrics and values associated
        with the quality assessment.
            

        Example of a request body:


        ``` json

        {
          "SampleSerialNumber": "GT test.vcf.gz",
          "SampleQcData": "{\"genes\": {\"AARS1\": 100.0, \"ZN ... }}"
        }

         ```

        #### Response


        Upon a successful request, the server will respond with a status code of
        **200** and a JSON object containing the following fields:


        - **Code** (string): A code indicating the result of the operation
        (empty string if no error).
            
        - **Data** (string): Additional data returned from the operation (empty
        string if not applicable).
            
        - **Info** (null): Additional information (null if not applicable).
            
        - **MoreInfo** (null): Extended information (null if not applicable).
            
        - **NeedEval** (boolean): A flag indicating whether further evaluation
        is required (true or false).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SampleSerialNumber: string
                SampleQcData: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": \"Done\",\r\n    \"NeedEval\": false\r\n}"
  /UpdateSampleSequencingQc:
    post:
      tags:
        - default
      summary: UpdateSampleSequencingQc
      description: >-
        ### Update Sample Sequencing QC


        This endpoint is used to update the quality control metrics for a
        specific sample sequencing analysis. It processes the provided metrics
        and returns a status indicating whether the update was successful.


        #### Request


        **Method:** POST  

        **Endpoint:** `{{baseURL}}/UpdateSampleSequencingQc`


        **Request Body (JSON):**  

        The request body must be a JSON object containing the following
        parameters:


        - `sampleSn` (string): The sample identifier (e.g., filename of the
        sequencing data).
            
        - `PassedReadsNum` (integer): The number of reads that passed quality
        control.
            
        - `FailedReadsNum` (integer): The number of reads that failed quality
        control.
            
        - `MappedReadsNum` (integer): The number of reads that were successfully
        mapped.
            
        - `PairedReadsNum` (integer): The number of paired-end reads.
            
        - `MeanCoverage` (float): The average coverage across the sample.
            
        - `Percent5x` (float): Percentage of the genome covered at least 5x.
            
        - `Percent20x` (float): Percentage of the genome covered at least 20x.
            
        - `Percent50x` (float): Percentage of the genome covered at least 50x.
            
        - `BedFilePosNum` (integer): The number of positions in the BED file.
            
        - `AvrAlignCoverage` (integer): The average alignment coverage.
            
        - `AlignedReads` (integer): The total number of aligned reads.
            
        - `BiallelicCount` (integer): The count of biallelic variants.
            
        - `BiallelicPercentage` (float): The percentage of biallelic variants.
            
        - `ChrXSnpsCount` (integer): The count of SNPs on chromosome X.
            
        - `TotalVariants` (integer): The total number of variants detected.
            
        - `MultiallelicCount` (integer): The count of multiallelic variants.
            
        - `MultiallelicPercentage` (float): The percentage of multiallelic
        variants.
            
        - `SnpCount` (integer): The total number of SNPs.
            
        - `SnpPercentage` (float): The percentage of SNPs.
            
        - `TotalHeteroCount` (integer): The total count of heterozygous
        variants.
            
        - `TotalHeterPercentage` (float): The percentage of heterozygous
        variants.
            
        - `TotalHomoCount` (integer): The total count of homozygous variants.
            
        - `TotalHomoPercentage` (float): The percentage of homozygous variants.
            
        - `HetHomRatio` (float): The ratio of heterozygous to homozygous
        variants.
            
        - `ChrXSnpsPercentage` (float): The percentage of SNPs on chromosome X.
            
        - `ChrYSnpsCount` (integer): The count of SNPs on chromosome Y.
            
        - `ChrYSnpsPercentage` (float): The percentage of SNPs on chromosome Y.
            
        - `XySnpsRatio` (float): The ratio of SNPs between chromosome X and Y.
            

        #### Response


        **Status Code:** 200  

        **Content-Type:** application/json


        **Response Structure:**  

        The response will be a JSON object containing the following fields:


        - `Code` (string): A code representing the status of the request (empty
        if successful).
            
        - `Data` (string): Additional data related to the request (empty if not
        applicable).
            
        - `Info` (null or object): Information about the request status (null if
        not applicable).
            
        - `MoreInfo` (null or object): Additional information (null if not
        applicable).
            
        - `NeedEval` (boolean): Indicates whether further evaluation is needed
        (true if evaluation is required).
            

        This endpoint is crucial for maintaining the integrity and accuracy of
        sequencing data by ensuring that quality metrics are accurately recorded
        and updated.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sampleSn: string
                PassedReadsNum: 1
                FailedReadsNum: 2
                MappedReadsNum: 30
                PairedReadsNum: 4
                MeanCoverage: 5.1
                Percent5x: 6.1
                Percent20x: 7.1
                Percent50x: 8.1
                BedFilePosNum: 9
                AvrAlignCoverage: 10
                AlignedReads: 11
                BiallelicCount: 4816423
                BiallelicPercentage: 18.6
                ChrXSnpsCount: 15
                TotalVariants: 4909967
                MultiallelicCount: 93544
                MultiallelicPercentage: 6.3
                SnpCount: 3949368
                SnpPercentage: 5.4
                TotalHeteroCount: 2964732
                TotalHeterPercentage: 7.3
                TotalHomoCount: 1835495
                TotalHomoPercentage: 5.1
                HetHomRatio: 1.62
                ChrXSnpsPercentage: 31.35
                ChrYSnpsCount: 88295
                ChrYSnpsPercentage: 10.1
                XySnpsRatio: 22.48
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"Data\": \"Done\",\r\n    \"NeedEval\": false\r\n}"
  /UploadAdvanceAnalysisToSample:
    post:
      tags:
        - default
      summary: UploadAdvanceAnalysisToSample
      description: >-
        ### Upload Advance Analysis to Sample


        This endpoint allows users to upload advanced analysis data to a
        specific sample.


        #### Request Method


        - **POST**
            

        #### Endpoint


        - `{{baseURL}}/UploadAdvanceAnalysisToSample`
            

        #### Request Body


        The request body must be in JSON format and should include the following
        parameters:


        - **sampleSn** (string): The identifier for the sample, typically
        including the file name (e.g., "GT test.vcf.gz").
            
        - **sampleAdvAnalysis** (string): A JSON string containing advanced
        analysis data for the sample. This should include various keys
        representing different genetic data analyses (e.g., "CYP2D6").
            

        #### Expected Response


        Upon a successful request, the API returns a JSON response with the
        following structure:


        - **Code** (string): An empty string indicating no error codes.
            
        - **Data** (null): This field is null in the current response.
            
        - **Info** (string): An empty string providing no additional
        information.
            
        - **MoreInfo** (null): This field is null in the current response.
            
        - **NeedEval** (boolean): A boolean value indicating whether further
        evaluation is needed (true in this case).
            

        #### Status Code


        - **200 OK**: Indicates that the request was processed successfully.
            

        Ensure that the request body adheres to the specified structure to avoid
        errors and receive the expected response.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: jsonFile
                  format: binary
                SampleSn:
                  type: string
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /UploadFilesToSample:
    post:
      tags:
        - default
      summary: UploadFilesToSample
      description: >-
        ### Upload Files to Sample


        This endpoint allows users to upload files associated with a specific
        sample. It is designed to handle the submission of various file types
        and parameters necessary for processing the sample data. For example,
        for a sample the SV was not present orignially. This API would enable
        upload to exisiting SNV file.


        #### Request


        **Method:** POST  

        **Endpoint:** `{{baseURL}}/UploadFilesToSample`


        **Request Body (JSON):**


        - `SampleSn` (string): A unique identifier for the sample.
            
        - `SnvFile` (string): The file path or identifier for the SNV file
        associated with the sample.
            
        - `SvFile` (string): The file path or identifier for the SV file
        associated with the sample.
            
        - `SkipAnnotation` (boolean): A flag indicating whether to skip the
        annotation process during file upload.
            

        #### Response


        **Status Code:** 200  

        **Content-Type:** application/json


        **Response Structure:**


        - `Code` (string): A code indicating the status of the request (empty if
        successful).
            
        - `Data` (null): Placeholder for any additional data returned (null in
        this case).
            
        - `Info` (string): A message providing additional information about the
        request (empty if no additional info).
            
        - `MoreInfo` (null): Placeholder for any further details (null in this
        case).
            
        - `NeedEval` (boolean): Indicates whether further evaluation is needed
        after the upload (true in this case).
            

        This endpoint is essential for managing sample data uploads and ensuring
        that the necessary files are processed correctly.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                SampleSn:
                  type: string
                SnvFile:
                  type: string
                  description: Value is name of file
                SvFile:
                  type: string
                  description: Value is name of file
                SkipAnnotation:
                  type: string
                File1:
                  type: string
                  format: binary
                File2:
                  type: string
                  format: binary
      parameters:
        - name: ApiUserId
          in: header
          schema:
            type: string
          example: '{{ApiUserId}}'
        - name: ApiUserKey
          in: header
          schema:
            type: string
          example: '{{ApiUserKey}}'
        - name: CustomerAccountKey
          in: header
          schema:
            type: string
          example: '{{CustomerAccountKey}}'
      responses:
        undefined:
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"Code\": \"success\",\r\n    \"NeedEval\": false\r\n}"
